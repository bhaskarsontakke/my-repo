---
swagger: "2.0"
info:
  version: "4.1.3"
  title: "Fusion Service experiments"
basePath: "/api/apollo"
tags:
- name: "experiments"
schemes:
- "http"
paths:
  /experiments:
    get:
      summary: "Get all entities"
      description: ""
      operationId: "getAllEntities"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Entity"
    post:
      summary: "Create a new entity"
      description: ""
      operationId: "createEntity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "JSON-formatted configuration values"
        required: false
        schema:
          $ref: "#/definitions/Experiment"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Entity"
  /experiments/_schema:
    get:
      summary: "Get JSON schema for objects managed by this API"
      description: ""
      operationId: "getEntitySchema"
      produces:
      - "application/schema+json; qs=1.0"
      - "application/json; qs=0.9"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ObjectType"
  /experiments/status:
    get:
      summary: "Get the status of the service"
      description: ""
      operationId: "getStatus"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceStatus"
  /experiments/{id}:
    get:
      summary: "Get the specified entity"
      description: ""
      operationId: "getEntity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The entity ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Entity"
    put:
      summary: "Update an entity"
      description: ""
      operationId: "updateEntity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The entity ID"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "An entity tag to match"
        required: false
        type: "string"
        default: "\"-1\""
      - in: "body"
        name: "body"
        description: "JSON-formatted configuration values"
        required: false
        schema:
          $ref: "#/definitions/Experiment"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Entity"
    delete:
      summary: "Delete an entity"
      description: ""
      operationId: "deleteEntity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The entity ID"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "An entity tag to match"
        required: false
        type: "string"
        default: "\"-1\""
      responses:
        default:
          description: "successful operation"
  /experiments/{id}/groundTruth:
    get:
      operationId: "getGroundTruthResultsAsCsv"
      produces:
      - "text/csv; qs=0.5"
      parameters:
      - name: "id"
        in: "path"
        description: "The experiment ID"
        required: true
        type: "string"
      - name: "queryLimit"
        in: "query"
        description: "Number of queries to return"
        required: false
        type: "integer"
        default: 100
        format: "int32"
      - name: "docLimit"
        in: "query"
        description: "Number of doc hits to return per query"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        default:
          description: "successful operation"
  /experiments/{id}/history:
    get:
      summary: "Get a list of previous configurations of this experiment"
      description: ""
      operationId: "getHistory"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The experiment ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ExperimentHistoryEntry"
  /experiments/{id}/job:
    post:
      summary: "Start an experiment"
      description: ""
      operationId: "startJob"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The experiment ID"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        required: false
        type: "string"
        default: "\"-1\""
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Experiment"
    delete:
      summary: "Stop an experiment"
      description: ""
      operationId: "stopJob"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The experiment ID"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        required: false
        type: "string"
        default: "\"-1\""
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Experiment"
  /experiments/{id}/metrics:
    get:
      summary: "Get metrics associated with all runs of this experiment, current and\
        \ past. "
      description: ""
      operationId: "getMetrics"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The experiment ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ExperimentMetricResponse"
    put:
      operationId: "recompute"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The experiment ID"
        required: true
        type: "string"
      - name: "sync"
        in: "query"
        description: "When true, run the job synchronously; the request will not return\
          \ until the metrics calculations jobs are complete"
        required: false
        type: "boolean"
        default: false
      - name: "syncWaitSeconds"
        in: "query"
        description: "The maximum amount of time to wait for metrics calculation jobs\
          \ to complete, in seconds. Applicable only if syncis 'true'"
        required: false
        type: "integer"
        default: 300
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ExperimentRecomputeResponse"
          headers: {}
  /experiments/{id}/metrics/{runId}:
    get:
      summary: "Get metrics associated with a particular run of this experiment. "
      description: ""
      operationId: "getMetricsForRun"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The experiment ID"
        required: true
        type: "string"
      - name: "runId"
        in: "path"
        description: "The runId of the experiment run to return, or 'latest' for the\
          \ most recent run (or the current run, if it is still running)"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ExperimentMetricResponse"
  /experiments/{id}/variant:
    get:
      operationId: "getVariant"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The experiment ID"
        required: true
        type: "string"
      - name: "userId"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ExperimentVariant"
          headers: {}
definitions:
  Entity:
    type: "object"
    properties:
      id:
        type: "string"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
  PropertyGroup:
    type: "object"
    properties:
      label:
        type: "string"
      properties:
        type: "array"
        items:
          type: "string"
  SparkJobStatus:
    type: "object"
    properties:
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      state:
        type: "string"
        enum:
        - "unknown"
        - "idle"
        - "starting"
        - "running"
        - "finishing"
        - "cancelling"
        - "finished"
        - "cancelled"
        - "error"
        - "skipped"
      jobId:
        type: "string"
      jobConfig:
        $ref: "#/definitions/SparkJobConfig"
      hostname:
        type: "string"
      result:
        $ref: "#/definitions/SparkJobResult"
      start:
        type: "string"
      end:
        type: "string"
      duration:
        type: "integer"
        format: "int64"
      terminalState:
        type: "boolean"
        default: false
  JobExecutionError:
    type: "object"
    properties:
      cause:
        $ref: "#/definitions/Throwable"
      stackTrace:
        type: "array"
        items:
          $ref: "#/definitions/StackTraceElement"
      errorType:
        $ref: "#/definitions/ErrorType"
      recommendedHttpStatus:
        $ref: "#/definitions/StatusType"
      httpStatus:
        type: "integer"
        format: "int32"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "object"
      job:
        $ref: "#/definitions/FusionResource"
      jobRunId:
        type: "string"
      message:
        type: "string"
      error:
        type: "string"
      errorMessage:
        type: "string"
      httpStatusMessage:
        type: "string"
      exceptionClass:
        type: "string"
      requestId:
        type: "string"
      localizedMessage:
        type: "string"
      suppressed:
        type: "array"
        items:
          $ref: "#/definitions/Throwable"
  StackTraceElement:
    type: "object"
    properties:
      methodName:
        type: "string"
      fileName:
        type: "string"
      lineNumber:
        type: "integer"
        format: "int32"
      className:
        type: "string"
      nativeMethod:
        type: "boolean"
        default: false
  AuthorizationContext:
    type: "object"
    properties:
      subject:
        $ref: "#/definitions/Subject"
      token:
        type: "string"
  DateAndValue:
    type: "object"
    properties:
      timestamp:
        type: "string"
        format: "date-time"
      value:
        type: "number"
        format: "double"
  ObjectType:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
      categoryPriority:
        type: "integer"
        format: "int32"
      allowedValues:
        type: "array"
        uniqueItems: true
        items:
          type: "object"
      hints:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      defaultValue:
        type: "object"
      accessibleProperty:
        $ref: "#/definitions/AccessibleProperty"
      oneOf:
        type: "array"
        items:
          $ref: "#/definitions/AnyTypeObjectObject"
      maxProperties:
        type: "integer"
        format: "int32"
      minProperties:
        type: "integer"
        format: "int32"
      required:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      properties:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/AnyType"
      propertyGroups:
        type: "array"
        items:
          $ref: "#/definitions/PropertyGroup"
      useSchemaGrouping:
        $ref: "#/definitions/UseSchemaGrouping"
      definitions:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/AnyType"
      type:
        type: "string"
        enum:
        - "String"
        - "Number"
        - "Integer"
        - "Boolean"
        - "Object"
        - "Array"
        - "Null"
        - "Ref"
      additionalProperties:
        type: "object"
  GlobPermission:
    type: "object"
    properties:
      methods:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "GET"
          - "POST"
          - "PUT"
          - "DELETE"
          - "HEAD"
          - "PATCH"
          - "OPTIONS"
      path:
        type: "string"
      params:
        $ref: "#/definitions/PermissionParams"
  ExperimentMetricResponse:
    type: "object"
    properties:
      experimentStart:
        type: "string"
        format: "date-time"
      experimentEnd:
        type: "string"
        format: "date-time"
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      runId:
        type: "string"
      totalRequests:
        type: "integer"
        format: "int64"
      totalRequestsInExperiment:
        type: "integer"
        format: "int64"
      confidence:
        type: "number"
        format: "double"
      variantResults:
        type: "array"
        items:
          $ref: "#/definitions/ExperimentMetricVariantResult"
  ErrorType:
    type: "object"
    properties:
      component:
        type: "string"
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  ExperimentVariant:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      pipeline:
        type: "string"
      params:
        type: "array"
        items:
          $ref: "#/definitions/ParamAndValue"
      collectionName:
        type: "string"
      traffic:
        type: "number"
        format: "double"
  ServiceStatus:
    type: "object"
    properties:
      node:
        type: "string"
      status:
        type: "string"
        enum:
        - "starting"
        - "ok"
        - "warning"
        - "error"
        - "shutdown"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      messages:
        type: "array"
        items:
          $ref: "#/definitions/StatusMessage"
  ExperimentMetricVariantResult:
    type: "object"
    properties:
      variantName:
        type: "string"
      results:
        type: "array"
        items:
          $ref: "#/definitions/ExperimentMetricResult"
      requests:
        type: "integer"
        format: "int64"
      percentRequests:
        type: "number"
        format: "double"
  AccessibleObject:
    type: "object"
    properties:
      annotations:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      declaredAnnotations:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      accessible:
        type: "boolean"
        default: false
  ExperimentHistoryEntry:
    type: "object"
    properties:
      experiment:
        $ref: "#/definitions/Experiment"
      experimentStart:
        type: "string"
        format: "date-time"
      experimentEnd:
        type: "string"
        format: "date-time"
  AnyType:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
      categoryPriority:
        type: "integer"
        format: "int32"
      allowedValues:
        type: "array"
        uniqueItems: true
        items:
          type: "object"
      hints:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      defaultValue:
        type: "object"
      accessibleProperty:
        $ref: "#/definitions/AccessibleProperty"
      oneOf:
        type: "array"
        items:
          $ref: "#/definitions/AnyTypeObjectObject"
      type:
        type: "string"
        enum:
        - "String"
        - "Number"
        - "Integer"
        - "Boolean"
        - "Object"
        - "Array"
        - "Null"
        - "Ref"
  ParamAndValue:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
      policy:
        type: "string"
        enum:
        - "REPLACE"
        - "APPEND"
        - "REMOVE"
        - "DEFAULT"
  ExperimentRecomputeResponse:
    type: "object"
    properties:
      jobStatus:
        type: "array"
        items:
          $ref: "#/definitions/SparkJobStatus"
  SparkJobConfig:
    type: "object"
    properties:
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      id:
        type: "string"
      type:
        type: "string"
  Experiment:
    type: "object"
    properties:
      id:
        type: "string"
      description:
        type: "string"
      uniqueIdParam:
        type: "string"
      baseSignalsCollection:
        type: "string"
      variants:
        type: "array"
        items:
          $ref: "#/definitions/ExperimentVariant"
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/ExperimentMetric"
      enabled:
        type: "boolean"
        default: false
      startedDate:
        type: "string"
        format: "date-time"
      runId:
        type: "string"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
  SparkJobResult:
    type: "object"
    properties:
      jobRunId:
        type: "string"
      jobConfigId:
        type: "string"
      docsWritten:
        type: "integer"
        format: "int64"
      error:
        $ref: "#/definitions/JobExecutionError"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
  PermissionParams:
    type: "object"
    properties:
      paramNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
  ExperimentMetricResult:
    type: "object"
    properties:
      name:
        type: "string"
      values:
        type: "array"
        items:
          $ref: "#/definitions/DateAndValue"
      probabilityOfBeating:
        type: "number"
        format: "double"
      p:
        type: "number"
        format: "double"
      confidence:
        type: "number"
        format: "double"
  Subject:
    type: "object"
    properties:
      userId:
        type: "string"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/GlobPermission"
      roles:
        type: "array"
        items:
          type: "string"
      realm:
        $ref: "#/definitions/SubjectRealm"
      principal:
        type: "string"
  Annotation:
    type: "object"
  StatusMessage:
    type: "object"
    properties:
      message:
        type: "string"
      date:
        type: "string"
        format: "date-time"
  Type:
    type: "object"
    properties:
      typeName:
        type: "string"
  AccessibleProperty:
    type: "object"
    properties:
      name:
        type: "string"
      required:
        type: "boolean"
        default: false
      genericType:
        $ref: "#/definitions/Type"
      accessibleObject:
        $ref: "#/definitions/AccessibleObject"
      hidden:
        type: "boolean"
        default: false
  FusionResource:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "APPKIT_APP"
        - "APP"
        - "COLLECTION"
        - "INDEX_PIPELINE"
        - "INDEX_STAGE"
        - "QUERY_STAGE"
        - "QUERY_PIPELINE"
        - "INDEX_PROFILE"
        - "QUERY_PROFILE"
        - "BLOB"
        - "PARSER"
        - "DATASOURCE"
        - "TASK"
        - "SCHEDULE"
        - "SEARCH_CLUSTER"
        - "EXPERIMENT"
        - "SPARK_JOB"
        - "GROUP"
        - "TYPE"
        - "RESOURCE"
        - "NULL"
      id:
        type: "string"
      simpleName:
        type: "string"
      canonicalName:
        type: "string"
      uri:
        type: "string"
        format: "uri"
  SubjectRealm:
    type: "object"
    properties:
      type:
        type: "string"
      name:
        type: "string"
      data:
        type: "object"
        additionalProperties:
          type: "object"
      principal:
        type: "string"
  StatusType:
    type: "object"
    properties:
      statusCode:
        type: "integer"
        format: "int32"
      reasonPhrase:
        type: "string"
      family:
        type: "string"
        enum:
        - "INFORMATIONAL"
        - "SUCCESSFUL"
        - "REDIRECTION"
        - "CLIENT_ERROR"
        - "SERVER_ERROR"
        - "OTHER"
  Throwable:
    type: "object"
    properties:
      cause:
        $ref: "#/definitions/Throwable"
      stackTrace:
        type: "array"
        items:
          $ref: "#/definitions/StackTraceElement"
      message:
        type: "string"
      localizedMessage:
        type: "string"
      suppressed:
        type: "array"
        items:
          $ref: "#/definitions/Throwable"
  ExperimentMetric:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      primary:
        type: "boolean"
        default: false
      jobId:
        type: "string"
      type:
        type: "string"
  AnyTypeObjectObject:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
      categoryPriority:
        type: "integer"
        format: "int32"
      allowedValues:
        type: "array"
        uniqueItems: true
        items:
          type: "object"
      hints:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      defaultValue:
        type: "object"
      accessibleProperty:
        $ref: "#/definitions/AccessibleProperty"
      oneOf:
        type: "array"
        items:
          $ref: "#/definitions/AnyTypeObjectObject"
      type:
        type: "string"
        enum:
        - "String"
        - "Number"
        - "Integer"
        - "Boolean"
        - "Object"
        - "Array"
        - "Null"
        - "Ref"
  UseSchemaGrouping:
    type: "object"
