---
swagger: "2.0"
info:
  version: "4.1.3"
  title: "Fusion Service signals"
basePath: "/api/apollo"
tags:
- name: "signals"
schemes:
- "http"
paths:
  /signals/_changed:
    post:
      summary: "For Lucidworks internal development"
      description: ""
      operationId: "changeCallback"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/Feature"
      responses:
        default:
          description: "successful operation"
  /signals/create/{collection}:
    post:
      operationId: "createSignalsCollections"
      consumes:
      - "application/json"
      parameters:
      - name: "collection"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "object"
          additionalProperties:
            type: "object"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CollectionNames"
          headers: {}
  /signals/status:
    get:
      summary: "Get the status of the service"
      description: ""
      operationId: "getStatus"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceStatus"
  /signals/{collection}:
    post:
      summary: "Send one or more signals for indexing"
      description: ""
      operationId: "createSignals"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection"
        in: "path"
        description: "The name of a collection"
        required: true
        type: "string"
      - name: "pipeline"
        in: "query"
        description: "An optional parameter to define a specific index pipeline to\
          \ be used while indexing these signals. If none is defined, the pre-configured\
          \ `_signals_ingest` pipeline will be used.  Note that the index pipeline\
          \ must end with a Solr Indexer stage, and in this stage the `enforce_schema`\
          \ property must be set to 'true'."
        required: false
        type: "string"
      - name: "commit"
        in: "query"
        description: "'True' to commit to Solr at the end of indexing."
        required: false
        type: "boolean"
      - name: "async"
        in: "query"
        description: "'True' to index signals in asynchronous mode, which issues an\
          \ autoCommit and does not report failures."
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "JSON-formatted signals data"
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Event"
      responses:
        default:
          description: "successful operation"
  /signals/{collection}/i:
    get:
      operationId: "processIncomingRequest"
      produces:
      - "image/png"
      parameters:
      - name: "collection"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
definitions:
  ServiceStatus:
    type: "object"
    properties:
      node:
        type: "string"
      status:
        type: "string"
        enum:
        - "starting"
        - "ok"
        - "warning"
        - "error"
        - "shutdown"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      messages:
        type: "array"
        items:
          $ref: "#/definitions/StatusMessage"
  Event:
    type: "object"
    properties:
      id:
        type: "string"
      timestamp:
        type: "string"
      epoch:
        type: "integer"
        format: "int64"
      type:
        type: "string"
      params:
        type: "object"
        additionalProperties:
          type: "object"
  CollectionNames:
    type: "object"
    properties:
      collection:
        type: "string"
      signalsCollection:
        type: "string"
      signalsAggrCollection:
        type: "string"
  Feature:
    type: "object"
    properties:
      name:
        type: "string"
      collectionId:
        type: "string"
      params:
        type: "object"
        additionalProperties:
          type: "object"
      enabled:
        type: "boolean"
        default: false
  StatusMessage:
    type: "object"
    properties:
      message:
        type: "string"
      date:
        type: "string"
        format: "date-time"
