{
    "swagger": "2.0",
    "info": {
        "description": "job-rest-server enables monitoring current spark job statuses",
        "version": "5.9.0",
        "title": "job-rest-server API documentation",
        "termsOfService": "https://lucidworks.com/legal/developer-license-agreement/",
        "contact": {
            "name": "Lucidworks",
            "url": "www.lucidworks.com",
            "email": "support@lucidworks.com"
        },
        "license": {
            "name": "License of API",
            "url": "https://lucidworks.com/legal/developer-license-agreement/"
        }
    },
    "host": "FUSION_HOST.com",
    "basePath": "/api/job-rest-server",
    "tags": [{
        "name": "job-config-controller",
        "description": "Job Config Controller"
    }, {
        "name": "job-controller",
        "description": "Job Controller"
    }, {
        "name": "recommendation-controller",
        "description": "Recommendation Controller"
    }, {
        "name": "signals-controller",
        "description": "Signals Controller"
    }],
    "schemes": ["http", "https"],
    "paths": {
        "/recommend/_changed": {
            "post": {
                "tags": ["recommendation-controller"],
                "summary": "changeCallback",
                "operationId": "changeCallbackUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "feature",
                    "description": "feature",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Feature"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/signals/_changed": {
            "post": {
                "tags": ["signals-controller"],
                "summary": "For Lucidworks internal development",
                "operationId": "changeCallbackUsingPOST_1",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "feature",
                    "description": "feature",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Feature"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/signals/create/{collection}": {
            "post": {
                "tags": ["signals-controller"],
                "summary": "Create signals collections and jobs",
                "operationId": "createSignalsCollectionsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "collection",
                    "in": "path",
                    "description": "Collection id",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "params",
                    "description": "Configuration parameters",
                    "required": true,
                    "schema": {
                        "type": "object"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CollectionNames"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/signals/{collection}/i": {
            "get": {
                "tags": ["signals-controller"],
                "summary": "processIncomingRequest",
                "operationId": "processIncomingRequestUsingGET",
                "produces": ["image/png"],
                "parameters": [{
                    "name": "collection",
                    "in": "path",
                    "description": "collection",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "headers",
                    "in": "header",
                    "description": "headers",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "params",
                    "in": "query",
                    "description": "params",
                    "required": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": true
            }
        },
        "/spark/configurations": {
            "get": {
                "tags": ["job-config-controller"],
                "summary": "Retrieve all job configurations",
                "operationId": "findJobConfigsUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Iterable«SparkJobConfig»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": ["job-config-controller"],
                "summary": "Create a Spark job config",
                "operationId": "createJobConfigUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "config",
                    "description": "Job config (JSON)",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/SparkJobConfigReq"
                    }
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "context",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SparkJobConfigRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/spark/configurations/app/{appId}": {
            "post": {
                "tags": ["job-config-controller"],
                "summary": "Create default job configurations for the app",
                "operationId": "createJobConfigurationsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "appId",
                    "in": "path",
                    "description": "Application id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/spark/configurations/experiment": {
            "post": {
                "tags": ["job-config-controller"],
                "summary": "Get list of Fusion resource by Experiment",
                "operationId": "createJobConfigurationsByExperimentUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "experiment",
                    "description": "experiment",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Experiment"
                    }
                }, {
                    "name": "fusionResource",
                    "in": "query",
                    "description": "fusionResource",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/spark/configurations/{id}": {
            "get": {
                "tags": ["job-config-controller"],
                "summary": "Get config for a Spark job",
                "operationId": "getJobConfigUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Job id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SparkJobConfigRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": ["job-config-controller"],
                "summary": "Update Spark job config",
                "operationId": "updateJobConfigUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "config",
                    "description": "Updated job config (JSON)",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/SparkJobConfigReq"
                    }
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "context",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Job id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SparkJobConfigRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": ["job-config-controller"],
                "summary": "Delete job config",
                "operationId": "deleteJobConfigUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "context",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Job id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/spark/driver/log/{id}": {
            "get": {
                "tags": ["job-config-controller"],
                "summary": "Get logs from Spark job",
                "operationId": "getLogsFromDefaultDriverUsingGET",
                "produces": ["text/plain"],
                "parameters": [{
                    "name": "Authorization",
                    "in": "header",
                    "description": "Authorization",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Job id",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "rows",
                    "in": "query",
                    "description": "Number of rows to return from the logging",
                    "required": false,
                    "type": "integer",
                    "default": 100,
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/spark/jobs": {
            "get": {
                "tags": ["job-controller"],
                "summary": "Retrieve status of all Spark jobs",
                "operationId": "findJobsUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SparkJobStatus"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/spark/jobs/{id}": {
            "get": {
                "tags": ["job-controller"],
                "summary": "Retrieve Spark job status",
                "operationId": "getJobStatusUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Job id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SparkJobStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": ["job-controller"],
                "summary": "Start a Spark job",
                "operationId": "startJobUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Job id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SparkJobStatus"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": ["job-controller"],
                "summary": "Stopa Spark job",
                "operationId": "stopJobUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Job id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/spark/jobs/{id}/all": {
            "get": {
                "tags": ["job-controller"],
                "summary": "findJobs",
                "operationId": "findJobsUsingGET_1",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SparkJobStatus"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/spark/schema": {
            "get": {
                "tags": ["job-config-controller"],
                "summary": "Get the schema for all the Spark job types",
                "operationId": "getConfigurationTypesUsingGET",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Fusion Native Realm": {
            "type": "basic"
        }
    },
    "definitions": {
        "AnyType": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "categoryPriority": {
                    "type": "integer",
                    "format": "int32"
                },
                "default": {
                    "type": "object"
                },
                "description": {
                    "type": "string"
                },
                "enum": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "object"
                    }
                },
                "hints": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "oneOf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnyType«object,object»"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": ["array", "boolean", "integer", "null", "number", "object", "ref", "string"]
                }
            },
            "title": "AnyType"
        },
        "AnyType«object,object»": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "categoryPriority": {
                    "type": "integer",
                    "format": "int32"
                },
                "default": {
                    "type": "object"
                },
                "description": {
                    "type": "string"
                },
                "enum": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "object"
                    }
                },
                "hints": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "oneOf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnyType«object,object»"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": ["array", "boolean", "integer", "null", "number", "object", "ref", "string"]
                }
            },
            "title": "AnyType«object,object»"
        },
        "CollectionNames": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "string"
                },
                "signalsAggrCollection": {
                    "type": "string"
                },
                "signalsCollection": {
                    "type": "string"
                }
            },
            "title": "CollectionNames"
        },
        "Experiment": {
            "type": "object",
            "properties": {
                "automaticallyAdjustTraffic": {
                    "type": "boolean"
                },
                "baseSignalsCollection": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExperimentMetric"
                    }
                },
                "runId": {
                    "type": "string"
                },
                "startTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "uniqueIdParameter": {
                    "type": "string"
                },
                "variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExperimentVariant"
                    }
                }
            },
            "title": "Experiment"
        },
        "ExperimentMetric": {
            "type": "object",
            "properties": {
                "binary": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primary": {
                    "type": "boolean"
                }
            },
            "title": "ExperimentMetric"
        },
        "ExperimentVariant": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParamAndValue"
                    }
                },
                "queryPipeline": {
                    "type": "string"
                },
                "weight": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "ExperimentVariant"
        },
        "Feature": {
            "type": "object",
            "properties": {
                "collectionId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "object"
                }
            },
            "title": "Feature"
        },
        "InputStream": {
            "type": "object",
            "title": "InputStream"
        },
        "Iterable«SparkJobConfig»": {
            "type": "object",
            "title": "Iterable«SparkJobConfig»"
        },
        "KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "title": "KeyValue"
        },
        "KeyValueReq": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "title": "KeyValueReq"
        },
        "KeyValueRes": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "title": "KeyValueRes"
        },
        "ObjectType": {
            "type": "object",
            "properties": {
                "additionalProperties": {
                    "type": "object"
                },
                "category": {
                    "type": "string"
                },
                "categoryPriority": {
                    "type": "integer",
                    "format": "int32"
                },
                "default": {
                    "type": "object"
                },
                "definitions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/AnyType"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enum": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "object"
                    }
                },
                "hints": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "maxProperties": {
                    "type": "integer",
                    "format": "int32"
                },
                "minProperties": {
                    "type": "integer",
                    "format": "int32"
                },
                "oneOf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnyType«object,object»"
                    }
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/AnyType"
                    }
                },
                "propertyGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PropertyGroup"
                    }
                },
                "required": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": ["array", "boolean", "integer", "null", "number", "object", "ref", "string"]
                }
            },
            "title": "ObjectType"
        },
        "ParamAndValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "policy": {
                    "type": "string",
                    "enum": ["append", "default", "remove", "replace"]
                },
                "value": {
                    "type": "string"
                }
            },
            "title": "ParamAndValue"
        },
        "PropertyGroup": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "PropertyGroup"
        },
        "Resource": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "file": {
                    "type": "file"
                },
                "filename": {
                    "type": "string"
                },
                "inputStream": {
                    "$ref": "#/definitions/InputStream"
                },
                "open": {
                    "type": "boolean"
                },
                "readable": {
                    "type": "boolean"
                },
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "url": {
                    "type": "string",
                    "format": "url"
                }
            },
            "title": "Resource"
        },
        "SparkJobConfig": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "sparkConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValue"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "SparkJobConfig"
        },
        "SparkJobConfigReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "sparkConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueReq"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "SparkJobConfigReq"
        },
        "SparkJobConfigRes": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "sparkConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueRes"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "SparkJobConfigRes"
        },
        "SparkJobResult": {
            "type": "object",
            "properties": {
                "exception": {
                    "type": "object"
                },
                "jobConfigId": {
                    "type": "string"
                },
                "jobRunId": {
                    "type": "string"
                }
            },
            "title": "SparkJobResult"
        },
        "SparkJobStatus": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer",
                    "format": "int64"
                },
                "endTime": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "jobConfig": {
                    "$ref": "#/definitions/SparkJobConfig"
                },
                "jobId": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/SparkJobResult"
                },
                "startTime": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": ["cancelled", "cancelling", "error", "finished", "finishing", "idle", "running", "skipped", "starting", "unknown"]
                }
            },
            "title": "SparkJobStatus"
        }
    }
}