---
swagger: "2.0"
info:
  version: "4.0.0-SNAPSHOT"
  title: "Fusion Service aggregator"
basePath: "/api/apollo"
tags:
- name: "aggregator"
schemes:
- "http"
paths:
  /aggregator:
    get:
      summary: "Retrieve service status"
      description: ""
      operationId: "getWorkerStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              additionalProperties:
                type: "object"
                additionalProperties:
                  type: "object"
      deprecated: true
  /aggregator/aggregations:
    get:
      summary: "List existing aggregation IDs"
      description: ""
      operationId: "listAggregations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
      deprecated: true
    post:
      summary: "Define a new aggregation"
      description: ""
      operationId: "postAggregation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "JSON-formatted aggregation configuration values"
        required: false
        schema:
          $ref: "#/definitions/AggregationType"
      responses:
        default:
          description: "successful operation"
      deprecated: true
  /aggregator/aggregations/schema:
    get:
      summary: "Get the schema that describes the aggregation type for creating new\
        \ aggregation instances"
      description: ""
      operationId: "aggregationsSchema"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ObjectType"
      deprecated: true
  /aggregator/aggregations/{id}:
    get:
      summary: "Retrieve aggregation definition"
      description: ""
      operationId: "getAggregation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Aggregation ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AggregationType"
      deprecated: true
    put:
      summary: "Update an existing aggregation definition"
      description: ""
      operationId: "updateAggregation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Aggregation ID"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "JSON-formatted aggregation configuration values"
        required: false
        schema:
          $ref: "#/definitions/AggregationType"
      responses:
        default:
          description: "successful operation"
      deprecated: true
    delete:
      summary: "Delete an aggregation definition"
      description: ""
      operationId: "deleteAggregation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Aggregation ID"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
      deprecated: true
  /aggregator/jobs:
    get:
      summary: "List all running aggregation jobs"
      description: ""
      operationId: "listAllJobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobList"
      deprecated: true
    delete:
      summary: "Stop all running aggregation jobs"
      description: ""
      operationId: "stopAllJobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
      deprecated: true
  /aggregator/jobs/{collection}:
    get:
      summary: "List all running aggregation jobs which target this collection"
      description: ""
      operationId: "listJobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection"
        in: "path"
        description: "Collection name"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
      deprecated: true
    post:
      summary: "Start an aggregation job without using any previously-defined aggregation\
        \ definitions"
      description: ""
      operationId: "execUndefinedAggregation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection"
        in: "path"
        description: "Collection name"
        required: true
        type: "string"
      - name: "time"
        in: "query"
        description: "Set the absolute time for the aggregation"
        required: false
        type: "string"
      - name: "rows"
        in: "query"
        description: "Retrieve raw events in batches of this size"
        required: false
        type: "string"
      - name: "sync"
        in: "query"
        description: "Run the aggregation synchronously"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "JSON-formatted aggregation job parameters"
        required: false
        schema:
          $ref: "#/definitions/ObjectNode"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SparkJobStatus"
      deprecated: true
    delete:
      summary: "Stop all running aggregation jobs targeting the collection"
      description: ""
      operationId: "stopJobsForCollection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection"
        in: "path"
        description: "Collection name"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
      deprecated: true
  /aggregator/jobs/{collection}/{id}:
    get:
      summary: "Retrieve status of a running aggregation job"
      description: ""
      operationId: "getJobStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection"
        in: "path"
        description: "Collection name"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Aggregation ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SparkJobStatus"
      deprecated: true
    post:
      summary: "Execute aggregation using existing aggregation definition"
      description: ""
      operationId: "execDefinedAggregation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection"
        in: "path"
        description: "Collection name"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Aggregation ID"
        required: true
        type: "string"
      - name: "time"
        in: "query"
        description: "Set the absolute time for the aggregation"
        required: false
        type: "string"
      - name: "rows"
        in: "query"
        description: "Retrieve raw events in batches of this size"
        required: false
        type: "string"
      - name: "sync"
        in: "query"
        description: "Run the aggregation synchronously"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SparkJobStatus"
      deprecated: true
    delete:
      summary: "Stop a running aggregation job"
      description: ""
      operationId: "stopJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection"
        in: "path"
        description: "Collection name"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Aggregation ID"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
      deprecated: true
  /aggregator/jobs/{collection}/{id}/output:
    delete:
      summary: "Delete an aggregation job's output"
      description: ""
      operationId: "deleteJobOutput"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection"
        in: "path"
        description: "Collection name"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Aggregation ID"
        required: true
        type: "string"
      - name: "jobId"
        in: "query"
        description: "Job ID"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
      deprecated: true
  /aggregator/spark/driver:
    delete:
      summary: "Shut down the Spark driver that is executing aggregations"
      description: "This does not wait for any currently executing aggregations to\
        \ complete. Any currently executing aggregations will fail. This endpoint\
        \ is experimental and subject to change"
      operationId: "stopSparkDriver"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
      deprecated: true
  /aggregator/status:
    get:
      summary: "Get the status of the service"
      description: ""
      operationId: "getStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceStatus"
definitions:
  KeyValue:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
  PropertyGroup:
    type: "object"
    properties:
      label:
        type: "string"
      properties:
        type: "array"
        items:
          type: "string"
  SparkJobConfig:
    type: "object"
    properties:
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      id:
        type: "string"
      type:
        type: "string"
  ObjectNode:
    type: "object"
    properties:
      fields:
        $ref: "#/definitions/IteratorEntryStringJsonNode"
      elements:
        $ref: "#/definitions/IteratorJsonNode"
      object:
        type: "boolean"
        default: false
      fieldNames:
        $ref: "#/definitions/IteratorString"
      valueAsText:
        type: "string"
      containerNode:
        type: "boolean"
        default: false
      numberType:
        type: "string"
        enum:
        - "INT"
        - "LONG"
        - "BIG_INTEGER"
        - "FLOAT"
        - "DOUBLE"
        - "BIG_DECIMAL"
      array:
        type: "boolean"
        default: false
      null:
        type: "boolean"
        default: false
      numberValue:
        $ref: "#/definitions/Number"
      bigIntegerValue:
        type: "integer"
      missingNode:
        type: "boolean"
        default: false
      pojo:
        type: "boolean"
        default: false
      number:
        type: "boolean"
        default: false
      integralNumber:
        type: "boolean"
        default: false
      floatingPointNumber:
        type: "boolean"
        default: false
      int:
        type: "boolean"
        default: false
      long:
        type: "boolean"
        default: false
      double:
        type: "boolean"
        default: false
      bigDecimal:
        type: "boolean"
        default: false
      binary:
        type: "boolean"
        default: false
      bigInteger:
        type: "boolean"
        default: false
      textual:
        type: "boolean"
        default: false
      boolean:
        type: "boolean"
        default: false
      valueNode:
        type: "boolean"
        default: false
      textValue:
        type: "string"
      doubleValue:
        type: "number"
        format: "double"
      decimalValue:
        type: "number"
      booleanValue:
        type: "boolean"
        default: false
      binaryValue:
        type: "array"
        items:
          type: "string"
          format: "byte"
      valueAsInt:
        type: "integer"
        format: "int32"
      valueAsLong:
        type: "integer"
        format: "int64"
      valueAsDouble:
        type: "number"
        format: "double"
      valueAsBoolean:
        type: "boolean"
        default: false
      longValue:
        type: "integer"
        format: "int64"
      intValue:
        type: "integer"
        format: "int32"
  SparkJobStatus:
    type: "object"
    properties:
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      state:
        type: "string"
        enum:
        - "unknown"
        - "idle"
        - "starting"
        - "running"
        - "finishing"
        - "cancelling"
        - "finished"
        - "cancelled"
        - "error"
        - "skipped"
      jobId:
        type: "string"
      jobConfig:
        $ref: "#/definitions/SparkJobConfig"
      hostname:
        type: "string"
      result:
        type: "object"
        additionalProperties:
          type: "object"
      terminalState:
        type: "boolean"
        default: false
  FunctionSpec:
    type: "object"
    properties:
      type:
        type: "string"
      sourceFields:
        type: "array"
        items:
          type: "string"
      targetField:
        type: "string"
      mapper:
        type: "boolean"
        default: false
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/KeyValue"
      params:
        type: "object"
        additionalProperties:
          type: "object"
  StackTraceElement:
    type: "object"
    properties:
      methodName:
        type: "string"
      fileName:
        type: "string"
      lineNumber:
        type: "integer"
        format: "int32"
      className:
        type: "string"
      nativeMethod:
        type: "boolean"
        default: false
  AggregationType:
    type: "object"
    properties:
      id:
        type: "string"
      timeRange:
        type: "string"
      outputCollection:
        type: "string"
      sourceRemove:
        type: "boolean"
        default: false
      sourceCatchup:
        type: "boolean"
        default: false
      outputRollup:
        type: "boolean"
        default: false
      sql:
        type: "string"
      rollupSql:
        type: "string"
      groupingFields:
        type: "array"
        items:
          type: "string"
      signalTypes:
        type: "array"
        items:
          type: "string"
      selectQuery:
        type: "string"
      sort:
        type: "string"
      outputPipeline:
        type: "string"
      rollupPipeline:
        type: "string"
      rollupAggregator:
        type: "string"
      aggregator:
        type: "string"
      aggregates:
        type: "array"
        items:
          $ref: "#/definitions/FunctionSpec"
      statsFields:
        type: "array"
        items:
          type: "string"
      paramMap:
        type: "object"
        additionalProperties:
          type: "string"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/KeyValue"
  Annotation:
    type: "object"
  StatusMessage:
    type: "object"
    properties:
      message:
        type: "string"
      date:
        type: "string"
        format: "date-time"
  ObjectType:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
      categoryPriority:
        type: "integer"
        format: "int32"
      allowedValues:
        type: "array"
        uniqueItems: true
        items:
          type: "object"
      hints:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      defaultValue:
        type: "object"
      accessibleProperty:
        $ref: "#/definitions/AccessibleProperty"
      oneOf:
        type: "array"
        items:
          $ref: "#/definitions/AnyTypeObjectObject"
      maxProperties:
        type: "integer"
        format: "int32"
      minProperties:
        type: "integer"
        format: "int32"
      required:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      properties:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/AnyType"
      propertyGroups:
        type: "array"
        items:
          $ref: "#/definitions/PropertyGroup"
      definitions:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/AnyType"
      type:
        type: "string"
        enum:
        - "String"
        - "Number"
        - "Integer"
        - "Boolean"
        - "Object"
        - "Array"
        - "Null"
        - "Ref"
      additionalProperties:
        type: "object"
  Type:
    type: "object"
    properties:
      typeName:
        type: "string"
  Number:
    type: "object"
  AccessibleProperty:
    type: "object"
    properties:
      name:
        type: "string"
      required:
        type: "boolean"
        default: false
      genericType:
        $ref: "#/definitions/Type"
      accessibleObject:
        $ref: "#/definitions/AccessibleObject"
  ServiceStatus:
    type: "object"
    properties:
      node:
        type: "string"
      status:
        type: "string"
        enum:
        - "starting"
        - "ok"
        - "warning"
        - "error"
        - "shutdown"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      messages:
        type: "array"
        items:
          $ref: "#/definitions/StatusMessage"
  IteratorJsonNode:
    type: "object"
  Throwable:
    type: "object"
    properties:
      cause:
        $ref: "#/definitions/Throwable"
      stackTrace:
        type: "array"
        items:
          $ref: "#/definitions/StackTraceElement"
      message:
        type: "string"
      localizedMessage:
        type: "string"
      suppressed:
        type: "array"
        items:
          $ref: "#/definitions/Throwable"
  IteratorEntryStringJsonNode:
    type: "object"
  AccessibleObject:
    type: "object"
    properties:
      annotations:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      declaredAnnotations:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      accessible:
        type: "boolean"
        default: false
  JobList:
    type: "object"
    properties:
      activeJobs:
        type: "object"
        additionalProperties:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              type: "string"
      finishedJobs:
        type: "object"
        additionalProperties:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              type: "string"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/Throwable"
  IteratorString:
    type: "object"
  AnyType:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
      categoryPriority:
        type: "integer"
        format: "int32"
      allowedValues:
        type: "array"
        uniqueItems: true
        items:
          type: "object"
      hints:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      defaultValue:
        type: "object"
      accessibleProperty:
        $ref: "#/definitions/AccessibleProperty"
      oneOf:
        type: "array"
        items:
          $ref: "#/definitions/AnyTypeObjectObject"
      type:
        type: "string"
        enum:
        - "String"
        - "Number"
        - "Integer"
        - "Boolean"
        - "Object"
        - "Array"
        - "Null"
        - "Ref"
  AnyTypeObjectObject:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
      categoryPriority:
        type: "integer"
        format: "int32"
      allowedValues:
        type: "array"
        uniqueItems: true
        items:
          type: "object"
      hints:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      defaultValue:
        type: "object"
      accessibleProperty:
        $ref: "#/definitions/AccessibleProperty"
      oneOf:
        type: "array"
        items:
          $ref: "#/definitions/AnyTypeObjectObject"
      type:
        type: "string"
        enum:
        - "String"
        - "Number"
        - "Integer"
        - "Boolean"
        - "Object"
        - "Array"
        - "Null"
        - "Ref"
