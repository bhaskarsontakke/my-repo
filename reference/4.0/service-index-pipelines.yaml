---
swagger: "2.0"
info:
  version: "4.0.2-SNAPSHOT"
  title: "Fusion Service index-pipelines"
basePath: "/api/apollo"
tags:
- name: "index-pipelines"
schemes:
- "http"
paths:
  /index-pipelines:
    get:
      summary: "List all pipeline definitions"
      description: ""
      operationId: "listPipelines"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
    post:
      summary: "Create a new pipeline"
      description: "The pipeline name is omitted from the path; it must be included\
        \ in the definition in the request body"
      operationId: "createPipeline"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/IndexPipelineDefinition"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PipelineDefinitionObject"
  /index-pipelines/status:
    get:
      summary: "Get the status of the service"
      description: ""
      operationId: "getStatus"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceStatus"
  /index-pipelines/{id}:
    get:
      summary: "Get the definition for a specific pipeline"
      description: ""
      operationId: "getPipeline"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PipelineDefinitionObject"
    put:
      summary: "Modify an existing pipeline"
      description: "This allows you to add, remove, re-order, or configure the pipeline's\
        \ stages"
      operationId: "createOrUpdatePipeline"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "An entity tag to match against the specified blob"
        required: false
        type: "string"
        default: "\"-1\""
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/IndexPipelineDefinition"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PipelineDefinitionObject"
    delete:
      summary: "Delete the specified pipeline"
      description: ""
      operationId: "deletePipeline"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a specific pipeline"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "An entity tag to match against the specified blob"
        required: false
        type: "string"
        default: "\"-1\""
      responses:
        default:
          description: "successful operation"
  /index-pipelines/{id}/collections/{collection}/debug:
    post:
      summary: "Debug a pipeline"
      description: "The documents to be debugged are sent in the request body. The\
        \ output shows the state of the document after each indexing stage. A debug\
        \ request will index documents to the system, but you can prevent it from\
        \ doing so by setting the query parameter 'simulate' to false."
      operationId: "debugPipelineDocument"
      consumes:
      - "application/vnd.lucidworks-document"
      - "application/vnd.solr-document"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The name of a specific pipeline"
        required: true
        type: "string"
      - name: "collection"
        in: "path"
        description: "The name of a specific collection"
        required: true
        type: "string"
      - name: "simulate"
        in: "query"
        description: "If true, documents wonâ€™t be sent to Solr for indexing; the solr-index\
          \ stage is skipped"
        required: false
        type: "boolean"
        default: false
      - name: "echo"
        in: "query"
        description: "If true, return the list of indexed documents; if false, no\
          \ output is returned"
        required: false
        type: "boolean"
        default: true
      - name: "echoMaxCount"
        in: "query"
        description: "The maximum number of documents to list in the output"
        required: false
        type: "integer"
        default: 100
        format: "int32"
      - name: "bufferDocsForSolr"
        in: "query"
        description: "If true, documents will be buffered before sending to Solr;\
          \ this is an asynchronous mode and may give faster performance when indexing\
          \ a large number of documents"
        required: false
        type: "boolean"
      - name: "throwOnError"
        in: "query"
        required: false
        type: "boolean"
        default: true
      - name: "eventsCollection"
        in: "query"
        required: false
        type: "string"
      - name: "eventsPipeline"
        in: "query"
        description: "A string containing the name of the index pipeline that processes\
          \ the link events; required for event processing"
        required: false
        type: "string"
      - name: "eventTypes"
        in: "query"
        description: "A comma-separated list of eventTypes to be processed by the\
          \ specified index pipeline; the only supported event type is 'links'"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/IterablePipelineDocument"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/IndexPipelineDebugResponse"
  /index-pipelines/{id}/collections/{collection}/index:
    post:
      summary: "index pipeline documents"
      description: ""
      operationId: "indexPipelineDocument"
      consumes:
      - "application/vnd.lucidworks-document"
      - "application/vnd.solr-document"
      produces:
      - "application/json; qs=1.0"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "collection"
        in: "path"
        required: true
        type: "string"
      - name: "simulate"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "echo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "echoMaxCount"
        in: "query"
        required: false
        type: "integer"
        default: -1
        format: "int32"
      - name: "stats"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "bufferDocsForSolr"
        in: "query"
        required: false
        type: "boolean"
      - name: "throwOnError"
        in: "query"
        required: false
        type: "boolean"
        default: true
      - name: "eventsCollection"
        in: "query"
        required: false
        type: "string"
      - name: "eventsPipeline"
        in: "query"
        required: false
        type: "string"
      - name: "eventTypes"
        in: "query"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/IterablePipelineDocument"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/IndexPipelineStatResponse"
  /index-pipelines/{id}/collections/{collection}/logs:
    get:
      summary: "For internal use by the system"
      description: ""
      operationId: "getPipelineLogs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The name of a specific pipeline"
        required: true
        type: "string"
      - name: "collection"
        in: "path"
        description: "The name of a specific collection"
        required: true
        type: "string"
      - name: "rows"
        in: "query"
        description: "NEEDS DEVELOPER REVIEW"
        required: false
        type: "integer"
        format: "int32"
      - name: "level"
        in: "query"
        description: "NEEDS DEVELOPER REVIEW"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LogResponse"
  /index-pipelines/{id}/metrics:
    get:
      summary: "For internal use by the system"
      description: ""
      operationId: "getPipelineMetrics"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The name of a specific pipeline"
        required: true
        type: "string"
      - name: "pretty"
        in: "query"
        description: "Format the output for easier reading"
        required: false
        type: "boolean"
      - name: "rateUnit"
        in: "query"
        description: "The time unit for rate values (`seconds`, `minutes`, and so\
          \ on)"
        required: false
        type: "string"
      - name: "durationUnit"
        in: "query"
        description: "The time unit for duration values (`seconds`, `minutes`, and\
          \ so on)"
        required: false
        type: "string"
      - name: "showSamples"
        in: "query"
        description: "Show the data values used in calculations"
        required: false
        type: "boolean"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MetricResponse"
  /index-pipelines/{id}/refresh:
    put:
      summary: "Reload the specified pipeline"
      description: "When changes are made to a pipeline, the pipeline needs to be\
        \ refreshed (reloaded). A Fusion restart refreshes all pipelines"
      operationId: "refreshPipeline"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a specific pipeline"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
    delete:
      summary: "For internal use by the system"
      description: ""
      operationId: "stopPipeline"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a specific pipeline"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
definitions:
  Histogram:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int64"
      snapshot:
        $ref: "#/definitions/Snapshot"
  Meter:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int64"
      oneMinuteRate:
        type: "number"
        format: "double"
      fiveMinuteRate:
        type: "number"
        format: "double"
      fifteenMinuteRate:
        type: "number"
        format: "double"
      meanRate:
        type: "number"
        format: "double"
  Gauge:
    type: "object"
    properties:
      value:
        type: "object"
  LogResponse:
    type: "object"
    properties:
      logs:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "object"
      solrUrl:
        type: "string"
      solrParams:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
  Counter:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int64"
  MetricResponse:
    type: "object"
    properties:
      metricRegistry:
        $ref: "#/definitions/MetricRegistry"
      metricsList:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Metric"
      pretty:
        type: "boolean"
        default: false
      rateUnit:
        type: "string"
        enum:
        - "NANOSECONDS"
        - "MICROSECONDS"
        - "MILLISECONDS"
        - "SECONDS"
        - "MINUTES"
        - "HOURS"
        - "DAYS"
      durationUnit:
        type: "string"
        enum:
        - "NANOSECONDS"
        - "MICROSECONDS"
        - "MILLISECONDS"
        - "SECONDS"
        - "MINUTES"
        - "HOURS"
        - "DAYS"
      showSamples:
        type: "boolean"
        default: false
  ServiceStatus:
    type: "object"
    properties:
      node:
        type: "string"
      status:
        type: "string"
        enum:
        - "starting"
        - "ok"
        - "warning"
        - "error"
        - "shutdown"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      messages:
        type: "array"
        items:
          $ref: "#/definitions/StatusMessage"
  IndexPipelineDefinition:
    type: "object"
    properties:
      id:
        type: "string"
      stageConfigurations:
        type: "array"
        items:
          $ref: "#/definitions/StageConfig"
      properties:
        type: "object"
        additionalProperties:
          type: "string"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      factory:
        $ref: "#/definitions/PipelineDefinitionFactoryIndexPipelineDefinition"
      hidden:
        type: "boolean"
        default: false
  IndexPipelineDebugResponse:
    type: "object"
    properties:
      stages:
        type: "array"
        items:
          $ref: "#/definitions/StageConfig"
      output:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/ContextAndDoc"
      outputEncounteredCount:
        type: "integer"
        format: "int64"
  InputStream:
    type: "object"
  MetricRegistry:
    type: "object"
    properties:
      metrics:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Metric"
      gauges:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Gauge"
      counters:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Counter"
      histograms:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Histogram"
      meters:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Meter"
      timers:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Timer"
      names:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
  PipelineDefinitionFactoryIndexPipelineDefinition:
    type: "object"
  Annotation:
    type: "object"
    properties:
      type:
        type: "string"
      start:
        type: "integer"
        format: "int64"
      end:
        type: "integer"
        format: "int64"
      features:
        type: "object"
        additionalProperties:
          type: "string"
      featureCount:
        type: "integer"
        format: "int32"
  StageConfig:
    type: "object"
    properties:
      type:
        type: "string"
      id:
        type: "string"
      skip:
        type: "boolean"
        default: false
      label:
        type: "string"
      condition:
        type: "string"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
  PipelineDocument:
    type: "object"
    properties:
      id:
        type: "string"
      fields:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/PipelineField"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      hints:
        type: "object"
        additionalProperties:
          type: "array"
          uniqueItems: true
          items:
            type: "string"
      commands:
        type: "array"
        items:
          $ref: "#/definitions/Command"
      content:
        type: "array"
        items:
          type: "string"
          format: "byte"
      flattenedFields:
        type: "array"
        items:
          $ref: "#/definitions/PipelineField"
      metadataNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      allFieldNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      reservedFieldNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      fieldNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
  StatusMessage:
    type: "object"
    properties:
      message:
        type: "string"
      date:
        type: "string"
        format: "date-time"
  Snapshot:
    type: "object"
    properties:
      median:
        type: "number"
        format: "double"
      get75thPercentile:
        type: "number"
        format: "double"
      get95thPercentile:
        type: "number"
        format: "double"
      get98thPercentile:
        type: "number"
        format: "double"
      get99thPercentile:
        type: "number"
        format: "double"
      get999thPercentile:
        type: "number"
        format: "double"
      max:
        type: "integer"
        format: "int64"
      mean:
        type: "number"
        format: "double"
      stdDev:
        type: "number"
        format: "double"
      values:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      min:
        type: "integer"
        format: "int64"
  IndexPipelineStatResponse:
    type: "object"
    properties:
      docs:
        type: "array"
        items:
          $ref: "#/definitions/PipelineDocument"
      stats:
        type: "object"
        additionalProperties:
          type: "object"
  PipelineDefinitionObject:
    type: "object"
    properties:
      id:
        type: "string"
      stageConfigurations:
        type: "array"
        items:
          $ref: "#/definitions/StageConfig"
      properties:
        type: "object"
        additionalProperties:
          type: "string"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      factory:
        $ref: "#/definitions/PipelineDefinitionFactoryObject"
      hidden:
        type: "boolean"
        default: false
  ContextAndDoc:
    type: "object"
    properties:
      context:
        type: "object"
        additionalProperties:
          type: "object"
      error:
        type: "string"
      doc:
        $ref: "#/definitions/PipelineDocument"
  Timer:
    type: "object"
    properties:
      oneMinuteRate:
        type: "number"
        format: "double"
      fiveMinuteRate:
        type: "number"
        format: "double"
      fifteenMinuteRate:
        type: "number"
        format: "double"
      meanRate:
        type: "number"
        format: "double"
      snapshot:
        $ref: "#/definitions/Snapshot"
      count:
        type: "integer"
        format: "int64"
  Command:
    type: "object"
    properties:
      name:
        type: "string"
      params:
        type: "object"
        additionalProperties:
          type: "string"
  PipelineDefinitionFactoryObject:
    type: "object"
  Metric:
    type: "object"
  PipelineField:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "object"
      annotations:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      annotationsSize:
        type: "integer"
        format: "int32"
      metadataNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
