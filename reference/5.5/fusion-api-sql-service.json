{
    "swagger": "2.0",
    "info": {
        "description": "A Lucidworks Fusion microservice for SQL querying. ",
        " version ": " 5.0 .0 ",
        " title ": " Fusion SQL Service API ",
        " termsOfService ": " https: //lucidworks.com/legal/developer-license-agreement/",
        "contact": {
            "name": "Lucidworks",
            "url": "www.lucidworks.com",
            "email": "support@lucidworks.com"
        },
        "license": {
            "name": "License of API ",
            " url ": " https: //lucidworks.com/legal/developer-license-agreement/"
        }
    },
    "host": "docs5512apis.lucidworkstest.com",
    "basePath": "/sql-service",
    "tags": [{
        "name": "catalog-controller",
        "description": "The Catalog API provides endpoints allowing users to register and manage internal and external data sources as assets, and to run SQL queries against those assets "
    }],
    " paths ": {
        " / catalog ": {
            " get ": {
                " tags ": [" catalog - controller "],
                " summary ": " List all projects stored in the catalog ",
                " operationId ": " getProjectsUsingGET ",
                " produces ": [" * /*", "application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataAsset"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["catalog-controller"],
                "summary": "Create a project for grouping related assets together",
                "operationId": "createProjectUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/ * ", " application / json "],
                " parameters ": [{
                    " in ": " body ",
                    " name ": " toCreate ",
                    " description ": " toCreate ",
                    " required ": true,
                    " schema ": {
                        " $ref ": "# / definitions / DataAsset "
                    }
                }],
                " responses ": {
                    " 200 ": {
                        " description ": " OK ",
                        " schema ": {
                            " $ref ": "# / definitions / DataAsset "
                        }
                    },
                    " 201 ": {
                        " description ": " Created "
                    },
                    " 401 ": {
                        " description ": " Unauthorized "
                    },
                    " 403 ": {
                        " description ": " Forbidden "
                    },
                    " 404 ": {
                        " description ": " Not Found "
                    }
                },
                " deprecated ": false
            }
        },
        " / catalog / _schema ": {
            " get ": {
                " tags ": [" catalog - controller "],
                " summary ": " getDataAssetSchema ",
                " operationId ": " getDataAssetSchemaUsingGET ",
                " produces ": [" * /*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/catalog/_search": {
            "get": {
                "tags": ["catalog-controller"],
                "summary": "Search for assets stored in the catalog",
                "description": "Accepts most valid Solr 'q', 'fq', and 'rows' query parameters",
                "operationId": "searchForAssetsUsingGET",
                "produces": ["*/ * ", " application / json "],
                " parameters ": [{
                    " name ": " allRequestParams ",
                    " in ": " query ",
                    " description ": " allRequestParams ",
                    " required ": true,
                    " items ": {
                        " type ": " object ",
                        " additionalProperties ": {
                            " type ": " string "
                        }
                    }
                }],
                " responses ": {
                    " 200 ": {
                        " description ": " OK ",
                        " schema ": {
                            " type ": " array ",
                            " items ": {
                                " $ref ": "# / definitions / DataAsset "
                            }
                        }
                    },
                    " 401 ": {
                        " description ": " Unauthorized "
                    },
                    " 403 ": {
                        " description ": " Forbidden "
                    },
                    " 404 ": {
                        " description ": " Not Found "
                    }
                },
                " deprecated ": false
            }
        },
        " / catalog / jdbc / url ": {
            " get ": {
                " tags ": [" catalog - controller "],
                " summary ": " getJdbcUrl ",
                " operationId ": " getJdbcUrlUsingGET ",
                " produces ": [" * /*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/catalog/{project}": {
            "get": {
                "tags": ["catalog-controller"],
                "summary": "Fetch the configuration of an existing project",
                "operationId": "getProjectUsingGET",
                "produces": ["*/ * ", " application / json "],
                " parameters ": [{
                    " name ": " project ",
                    " in ": " path ",
                    " description ": " project ",
                    " required ": true,
                    " type ": " string "
                }],
                " responses ": {
                    " 200 ": {
                        " description ": " OK ",
                        " schema ": {
                            " $ref ": "# / definitions / DataAsset "
                        }
                    },
                    " 401 ": {
                        " description ": " Unauthorized "
                    },
                    " 403 ": {
                        " description ": " Forbidden "
                    },
                    " 404 ": {
                        " description ": " Not Found "
                    }
                },
                " deprecated ": false
            },
            " delete ": {
                " tags ": [" catalog - controller "],
                " summary ": " Delete a project from the catalog, and all assets contained by that project ",
                " operationId ": " deleteProjectUsingDELETE ",
                " produces ": [" * /*"],
                "parameters": [{
                    "name": "project",
                    "in": "path",
                    "description": "project",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        },
        "/catalog/{project}/assets": {
            "get": {
                "tags": ["catalog-controller"],
                "summary": "List all assets in a project, along with each asset's configuration",
                "operationId": "getAssetsForProjectUsingGET",
                "produces": ["*/ * ", " application / json "],
                " parameters ": [{
                    " name ": " project ",
                    " in ": " path ",
                    " description ": " project ",
                    " required ": true,
                    " type ": " string "
                }],
                " responses ": {
                    " 200 ": {
                        " description ": " OK ",
                        " schema ": {
                            " type ": " array ",
                            " items ": {
                                " $ref ": "# / definitions / DataAsset "
                            }
                        }
                    },
                    " 401 ": {
                        " description ": " Unauthorized "
                    },
                    " 403 ": {
                        " description ": " Forbidden "
                    },
                    " 404 ": {
                        " description ": " Not Found "
                    }
                },
                " deprecated ": false
            },
            " post ": {
                " tags ": [" catalog - controller "],
                " summary ": " Create a data asset for querying within the specific project ",
                " operationId ": " createAssetUsingPOST ",
                " consumes ": [" application / json "],
                " produces ": [" * /*", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "newDataAsset",
                    "description": "newDataAsset",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/DataAsset"
                    }
                }, {
                    "name": "project",
                    "in": "path",
                    "description": "project",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataAsset"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/catalog/{project}/assets/{assetName}": {
            "get": {
                "tags": ["catalog-controller"],
                "summary": "Fetch the configuration for an existing asset",
                "operationId": "getAssetUsingGET",
                "produces": ["*/ * ", " application / json "],
                " parameters ": [{
                    " name ": " assetName ",
                    " in ": " path ",
                    " description ": " assetName ",
                    " required ": true,
                    " type ": " string "
                }, {
                    " name ": " project ",
                    " in ": " path ",
                    " description ": " project ",
                    " required ": true,
                    " type ": " string "
                }],
                " responses ": {
                    " 200 ": {
                        " description ": " OK ",
                        " schema ": {
                            " $ref ": "# / definitions / DataAsset "
                        }
                    },
                    " 401 ": {
                        " description ": " Unauthorized "
                    },
                    " 403 ": {
                        " description ": " Forbidden "
                    },
                    " 404 ": {
                        " description ": " Not Found "
                    }
                },
                " deprecated ": false
            },
            " put ": {
                " tags ": [" catalog - controller "],
                " summary ": " Update the configuration or metadata for an existing data asset ",
                " operationId ": " updateAssetUsingPUT ",
                " consumes ": [" application / json "],
                " produces ": [" * /*", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "asset",
                    "description": "asset",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/DataAsset"
                    }
                }, {
                    "name": "assetName",
                    "in": "path",
                    "description": "assetName",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "project",
                    "in": "path",
                    "description": "project",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataAsset"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["catalog-controller"],
                "summary": "Delete an asset from the catalog",
                "operationId": "deleteAssetUsingDELETE",
                "produces": ["*/ * "],
                " parameters ": [{
                    " name ": " assetName ",
                    " in ": " path ",
                    " description ": " assetName ",
                    " required ": true,
                    " type ": " string "
                }, {
                    " name ": " project ",
                    " in ": " path ",
                    " description ": " project ",
                    " required ": true,
                    " type ": " string "
                }],
                " responses ": {
                    " 204 ": {
                        " description ": " No Content "
                    },
                    " 401 ": {
                        " description ": " Unauthorized "
                    },
                    " 403 ": {
                        " description ": " Forbidden "
                    }
                },
                " deprecated ": false
            }
        },
        " / catalog / { project } /assets/ { assetName } /count": {
            "get": {
                "tags": ["catalog-controller"],
                "summary": "Get the number of rows in an asset after applying a specified filter or sample ",
                " operationId ": " getCountUsingGET ",
                " produces ": [" * /*", "application/json"],
                "parameters": [{
                    "name": "assetName",
                    "in": "path",
                    "description": "assetName",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "fq",
                    "in": "query",
                    "description": "fq",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "project",
                    "in": "path",
                    "description": "project",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "sample",
                    "in": "query",
                    "description": "sample",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AssetCountResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/catalog/{project}/assets/{assetName}/rows": {
            "get": {
                "tags": ["catalog-controller"],
                "summary": "Fetch rows from an asset after optional filtering, sampling, and limiting",
                "operationId": "getRowsUsingGET",
                "produces": ["*/ * ", " application / json "],
                " parameters ": [{
                    " name ": " assetName ",
                    " in ": " path ",
                    " description ": " assetName ",
                    " required ": true,
                    " type ": " string "
                }, {
                    " name ": " fq ",
                    " in ": " query ",
                    " description ": " fq ",
                    " required ": false,
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    },
                    " collectionFormat ": " multi "
                }, {
                    " name ": " project ",
                    " in ": " path ",
                    " description ": " project ",
                    " required ": true,
                    " type ": " string "
                }, {
                    " name ": " rows ",
                    " in ": " query ",
                    " description ": " rows ",
                    " required ": false,
                    " type ": " string "
                }, {
                    " name ": " sample ",
                    " in ": " query ",
                    " description ": " sample ",
                    " required ": false,
                    " type ": " string "
                }, {
                    " name ": " sort ",
                    " in ": " query ",
                    " description ": " sort ",
                    " required ": false,
                    " type ": " string "
                }],
                " responses ": {
                    " 200 ": {
                        " description ": " OK ",
                        " schema ": {
                            " type ": " array ",
                            " items ": {
                                " $ref ": "# / definitions / CatalogQueryResult "
                            }
                        }
                    },
                    " 401 ": {
                        " description ": " Unauthorized "
                    },
                    " 403 ": {
                        " description ": " Forbidden "
                    },
                    " 404 ": {
                        " description ": " Not Found "
                    }
                },
                " deprecated ": false
            }
        },
        " / catalog / { project } /assets/ { assetName } /schema": {
            "get": {
                "tags": ["catalog-controller"],
                "summary": "Show the schema for an existing data asset ",
                " description ": " Specified asset must be either a table or view ",
                " operationId ": " getAssetSchemaUsingGET ",
                " produces ": [" * /*", "application/json"],
                "parameters": [{
                    "name": "assetName",
                    "in": "path",
                    "description": "assetName",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "project",
                    "in": "path",
                    "description": "project",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/catalog/{project}/query": {
            "post": {
                "tags": ["catalog-controller"],
                "summary": "Submit a SQL query against one or more assets in a project",
                "operationId": "executeQueryUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/ * ", " application / json "],
                " parameters ": [{
                    " in ": " body ",
                    " name ": " catalogQuery ",
                    " description ": " catalogQuery ",
                    " required ": true,
                    " schema ": {
                        " $ref ": "# / definitions / CatalogQuery "
                    }
                }, {
                    " name ": " project ",
                    " in ": " path ",
                    " description ": " project ",
                    " required ": true,
                    " type ": " string "
                }],
                " responses ": {
                    " 200 ": {
                        " description ": " OK ",
                        " schema ": {
                            " type ": " array ",
                            " items ": {
                                " $ref ": "# / definitions / CatalogQueryResult "
                            }
                        }
                    },
                    " 201 ": {
                        " description ": " Created "
                    },
                    " 401 ": {
                        " description ": " Unauthorized "
                    },
                    " 403 ": {
                        " description ": " Forbidden "
                    },
                    " 404 ": {
                        " description ": " Not Found "
                    }
                },
                " deprecated ": false
            }
        }
    },
    " definitions ": {
        " AnyType ": {
            " type ": " object ",
            " properties ": {
                " default ": {
                    " type ": " object "
                },
                " description ": {
                    " type ": " string "
                },
                " enum ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " object "
                    }
                },
                " hints ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    }
                },
                " oneOf ": {
                    " type ": " array ",
                    " items ": {
                        " $ref ": "# / definitions / AnyType« object, object» "
                    }
                },
                " title ": {
                    " type ": " string "
                },
                " type ": {
                    " type ": " string ",
                    " enum ": [" string ", " number ", " boolean ", " object ", " array ", " null ", " ref "]
                }
            },
            " title ": " AnyType "
        },
        " AnyType« object, object» ": {
            " type ": " object ",
            " properties ": {
                " default ": {
                    " type ": " object "
                },
                " description ": {
                    " type ": " string "
                },
                " enum ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " object "
                    }
                },
                " hints ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    }
                },
                " oneOf ": {
                    " type ": " array ",
                    " items ": {
                        " $ref ": "# / definitions / AnyType« object, object» "
                    }
                },
                " title ": {
                    " type ": " string "
                },
                " type ": {
                    " type ": " string ",
                    " enum ": [" string ", " number ", " boolean ", " object ", " array ", " null ", " ref "]
                }
            },
            " title ": " AnyType« object, object» "
        },
        " AssetCountResponse ": {
            " type ": " object ",
            " properties ": {
                " count(1) ": {
                    " type ": " integer ",
                    " format ": " int64 "
                }
            },
            " title ": " AssetCountResponse "
        },
        " CacheStrategy ": {
            " type ": " object ",
            " properties ": {
                " timeToLive ": {
                    " type ": " integer ",
                    " format ": " int32 "
                },
                " refreshFrequency ": {
                    " type ": " integer ",
                    " format ": " int32 "
                },
                " autoRefresh ": {
                    " type ": " boolean "
                }
            },
            " title ": " CacheStrategy "
        },
        " CatalogQuery ": {
            " type ": " object ",
            " properties ": {
                " sql ": {
                    " type ": " string "
                },
                " solr ": {
                    " type ": " string "
                },
                " collection ": {
                    " type ": " string "
                },
                " requestHandler ": {
                    " type ": " string "
                },
                " cacheResultsAs ": {
                    " type ": " string "
                },
                " flushCaches ": {
                    " type ": " boolean "
                },
                " params ": {
                    " type ": " object "
                }
            },
            " title ": " CatalogQuery "
        },
        " DataAsset ": {
            " type ": " object ",
            " properties ": {
                " autocreated ": {
                    " type ": " boolean "
                },
                " deleted ": {
                    " type ": " boolean "
                },
                " id ": {
                    " type ": " string "
                },
                " projectId ": {
                    " type ": " string "
                },
                " updatedOn ": {
                    " type ": " string ",
                    " example ": " yyyy - MM - dd 'T' HH: mm: ss.SS 'Z' "
                },
                " version ": {
                    " type ": " integer ",
                    " format ": " int64 "
                },
                " name ": {
                    " type ": " string "
                },
                " assetType ": {
                    " type ": " string ",
                    " enum ": [" project ", " table ", " view ", " field ", " udf ", " metric "]
                },
                " description ": {
                    " type ": " string "
                },
                " sourceUri ": {
                    " type ": " string "
                },
                " owner ": {
                    " type ": " string "
                },
                " ownerEmail ": {
                    " type ": " string "
                },
                " tags ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    }
                },
                " format ": {
                    " type ": " string "
                },
                " options ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    }
                },
                " filters ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    }
                },
                " sql ": {
                    " type ": " string "
                },
                " cacheOnLoad ": {
                    " type ": " boolean "
                },
                " cacheStrategy ": {
                    " $ref ": "# / definitions / CacheStrategy "
                },
                " dependsOn ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    }
                },
                " createdOn ": {
                    " type ": " string ",
                    " example ": " yyyy - MM - dd 'T' HH: mm: ss.SS 'Z' "
                },
                " additionalSettings ": {
                    " type ": " object "
                }
            },
            " title ": " DataAsset "
        },
        " ObjectType ": {
            " type ": " object ",
            " properties ": {
                " default ": {
                    " type ": " object "
                },
                " description ": {
                    " type ": " string "
                },
                " enum ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " object "
                    }
                },
                " hints ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    }
                },
                " interfaces ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    }
                },
                " oneOf ": {
                    " type ": " array ",
                    " items ": {
                        " $ref ": "# / definitions / AnyType« object, object» "
                    }
                },
                " properties ": {
                    " type ": " object ",
                    " additionalProperties ": {
                        " $ref ": "# / definitions / AnyType "
                    }
                },
                " required ": {
                    " type ": " array ",
                    " items ": {
                        " type ": " string "
                    }
                },
                " title ": {
                    " type ": " string "
                },
                " type ": {
                    " type ": " string ",
                    " enum ": [" string ", " number ", " boolean ", " object ", " array ", " null ", " ref "]
                }
            },
            " title ": " ObjectType "
        }
    }
}