{
  "swagger": "2.0",
  "info": {
    "version": "4.2.6-rc1",
    "title": "Fusion Service history"
  },
  "basePath": "/api/apollo",
  "tags": [
    {
      "name": "history"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/history": {
      "get": {
        "summary": "Return a list of services",
        "description": "",
        "operationId": "listAllServices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Clear the histories for all services",
        "description": "",
        "operationId": "clearAllServiceHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/history/status": {
      "get": {
        "summary": "Get the status of the service",
        "description": "",
        "operationId": "getStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceStatus"
              }
            }
          }
        }
      }
    },
    "/history/{service}": {
      "get": {
        "summary": "Return information about a service",
        "description": "",
        "operationId": "getServiceHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The name of a service",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeRange",
            "in": "query",
            "description": "NEEDS DEVELOPER REVIEW",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxLength",
            "in": "query",
            "description": "NEEDS DEVELOPER REVIEW",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/History"
            }
          }
        }
      },
      "put": {
        "summary": "For internal use by the system",
        "description": "",
        "operationId": "addServiceHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The name of a service",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted configuration values",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HistoryEvent"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "summary": "Delete all history for a specified service",
        "description": "",
        "operationId": "clearServiceHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The name of a service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/history/{service}/items": {
      "get": {
        "summary": "Return all items in a service's history",
        "description": "",
        "operationId": "listAllItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The name of a service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Clear all items from a service's history",
        "description": "",
        "operationId": "clearAllItemHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The name of a service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/history/{service}/items/{item}": {
      "get": {
        "summary": "Return a specific item in a service's history",
        "description": "",
        "operationId": "getItemHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The name of a service",
            "required": true,
            "type": "string"
          },
          {
            "name": "item",
            "in": "path",
            "description": "The name of a history item",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeRange",
            "in": "query",
            "description": "NEEDS DEVELOPER REVIEW",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxLength",
            "in": "query",
            "description": "NEEDS DEVELOPER REVIEW",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/History"
            }
          }
        }
      },
      "put": {
        "summary": "Add an item to a service's history",
        "description": "",
        "operationId": "addItemHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The name of a service",
            "required": true,
            "type": "string"
          },
          {
            "name": "item",
            "in": "path",
            "description": "The name of a history item",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted history items",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HistoryEvent"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "summary": "Clear a specific item from a service's history",
        "description": "",
        "operationId": "clearItemHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The name of a service",
            "required": true,
            "type": "string"
          },
          {
            "name": "item",
            "in": "path",
            "description": "The name of a history item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "RESTValidationError": {
      "allOf": [
        {
          "$ref": "#/definitions/RESTError"
        },
        {
          "type": "object",
          "properties": {
            "validationErrors": {
              "type": "array",
              "readOnly": true,
              "items": {
                "$ref": "#/definitions/ValidationError"
              }
            },
            "cause": {
              "$ref": "#/definitions/Throwable"
            }
          }
        }
      ]
    },
    "FusionResource": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "APPKIT_APP",
            "WEBAPP_ADMIN_APP",
            "APP",
            "COLLECTION",
            "INDEX_PIPELINE",
            "INDEX_STAGE",
            "QUERY_STAGE",
            "QUERY_PIPELINE",
            "INDEX_PROFILE",
            "QUERY_PROFILE",
            "BLOB",
            "PARSER",
            "DATASOURCE",
            "TASK",
            "SCHEDULE",
            "SEARCH_CLUSTER",
            "EXPERIMENT",
            "SPARK_JOB",
            "GROUP",
            "CUSTOM_RULE_TYPE",
            "TYPE",
            "RESOURCE",
            "NULL"
          ]
        },
        "id": {
          "type": "string"
        },
        "canonicalName": {
          "type": "string"
        },
        "uri": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "ServiceStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "starting",
            "ok",
            "warning",
            "error",
            "shutdown"
          ]
        },
        "node": {
          "type": "string",
          "readOnly": true
        },
        "messages": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/StatusMessage"
          }
        }
      }
    },
    "JobExecutionError": {
      "allOf": [
        {
          "$ref": "#/definitions/RESTError"
        },
        {
          "type": "object",
          "properties": {
            "job": {
              "readOnly": true,
              "$ref": "#/definitions/FusionResource"
            },
            "jobRunId": {
              "type": "string",
              "readOnly": true
            }
          }
        }
      ]
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "error": {
          "type": "string"
        },
        "exception": {
          "readOnly": true,
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "HistoryEvent": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "error": {
          "$ref": "#/definitions/RESTError"
        }
      }
    },
    "History": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/HistoryEvent"
          }
        }
      }
    },
    "RESTError": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "httpStatusCode": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "error": {
          "type": "string",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        },
        "details": {
          "type": "string",
          "readOnly": true
        },
        "cause": {
          "readOnly": true,
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        },
        "httpStatusMessage": {
          "type": "string",
          "readOnly": true
        },
        "class": {
          "type": "string",
          "readOnly": true
        },
        "requestId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StatusMessage": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        }
      }
    }
  }
}