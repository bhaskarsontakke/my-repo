{
    "swagger": "2.0",
    "info": {
        "description": "API for the Proxy for Lucidworks Fusion",
        "version": "5.6.1",
        "title": "Fusion Proxy API",
        "termsOfService": "https://lucidworks.com/legal/developer-license-agreement/",
        "contact": {
            "name": "Lucidworks",
            "url": "www.lucidworks.com",
            "email": "support@lucidworks.com"
        },
        "license": {
            "name": "License of API",
            "url": "https://lucidworks.com/legal/developer-license-agreement/"
        }
    },
    "host": "docs.b.lucidworks.cloud",
    "basePath": "/",
    "tags": [{
        "name": "api-controller",
        "description": "Basic system and user status information"
    }, {
        "name": "api-key-controller",
        "description": "Api Key Controller"
    }, {
        "name": "o-auth-2-controller",
        "description": "Fusion OAuth2 endpoint"
    }, {
        "name": "realm-controller",
        "description": "Realms' management"
    }, {
        "name": "role-controller",
        "description": "Roles' management"
    }, {
        "name": "suggestion-controller",
        "description": "Suggestion endpoint"
    }, {
        "name": "user-controller",
        "description": "Fusion's Users management"
    }],
    "paths": {
        "/api": {
            "get": {
                "tags": ["api-controller"],
                "summary": "Information about the available realms and known services",
                "operationId": "getStatusUsingGET",
                "produces": ["*/*", "application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GatewayStatus"
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            },
            "post": {
                "tags": ["api-controller"],
                "summary": "Set an initial admin password",
                "operationId": "createUserUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "map",
                    "description": "map",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "example": "{\"password\":\"password123\"}",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Initial password set"
                    },
                    "400": {},
                    "401": {},
                    "409": {
                        "description": "Password already set"
                    },
                    "500": {}
                }
            }
        },
        "/api/api-key": {
            "get": {
                "tags": ["api-key-controller"],
                "summary": "Returns all api keys",
                "description": "Deleted keys are filtered",
                "operationId": "getAllUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiKeyDto"
                            }
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            },
            "post": {
                "tags": ["api-key-controller"],
                "summary": "Creates new api key based on request body",
                "operationId": "createApiKeyUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "apiKeyRequest",
                    "description": "apiKeyRequest",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ApiKeyRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiKeyDto"
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {
                        "description": "Key encryption exception"
                    }
                }
            }
        },
        "/api/api-key/{id}": {
            "get": {
                "tags": ["api-key-controller"],
                "summary": "Returns api key with specific id",
                "description": "We return not found error when key is deleted",
                "operationId": "getByIdUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiKeyDto"
                        }
                    },
                    "400": {},
                    "401": {},
                    "404": {
                        "description": "Api key cannot be found"
                    },
                    "500": {}
                }
            },
            "delete": {
                "tags": ["api-key-controller"],
                "summary": "Removes api key with specific id",
                "operationId": "deleteByIdUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "id",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            }
        },
        "/api/realm-configs": {
            "get": {
                "tags": ["realm-controller"],
                "summary": "Obtain multiple realms",
                "description": "Return all realms unless name filter parameter is specified",
                "operationId": "getRealmsUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "name",
                    "in": "query",
                    "description": "Realm name to be returned",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RealmRes"
                            }
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            },
            "post": {
                "tags": ["realm-controller"],
                "summary": "Create Realm",
                "description": "Creates a realm based on provided configuration",
                "operationId": "createRealmUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "realm",
                    "description": "The realm",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/RealmReq"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/RealmRes"
                        }
                    },
                    "400": {},
                    "401": {},
                    "409": {
                        "description": "Realm with name or id already exists"
                    },
                    "500": {}
                }
            }
        },
        "/api/realm-configs/default": {
            "get": {
                "tags": ["realm-controller"],
                "summary": "Returns a potential default realms with a flag which one is currently default",
                "operationId": "getDefaultRealmListUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DefaultRealmListElement"
                            }
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            },
            "put": {
                "tags": ["realm-controller"],
                "summary": "Set Default realm",
                "operationId": "setDefaultRealmUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "realmID",
                    "description": "ID of default realm",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/IdObject"
                    }
                }],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            }
        },
        "/api/realm-configs/{id}": {
            "get": {
                "tags": ["realm-controller"],
                "summary": "Get Realm",
                "description": "Obtain configuration of existing realm",
                "operationId": "getRealmUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The realm ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RealmRes"
                        }
                    },
                    "400": {},
                    "401": {},
                    "404": {
                        "description": "Realm not found"
                    },
                    "500": {}
                }
            },
            "put": {
                "tags": ["realm-controller"],
                "summary": "Update an existing realm",
                "operationId": "updateRealmUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The realm ID",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "newConfiguration",
                    "description": "The realm content",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/RealmReq"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RealmRes"
                        }
                    },
                    "400": {},
                    "401": {},
                    "404": {
                        "description": "Realm not found"
                    },
                    "500": {}
                }
            },
            "delete": {
                "tags": ["realm-controller"],
                "summary": "Delete Realm",
                "description": "Remove existing realm",
                "operationId": "deleteRealmUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The realm ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {},
                    "401": {},
                    "404": {
                        "description": "Realm not found"
                    },
                    "500": {}
                }
            }
        },
        "/api/roles": {
            "get": {
                "tags": ["role-controller"],
                "summary": "Return all roles defined in the Fusion or role with a specified name",
                "operationId": "getRolesUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "name",
                    "in": "query",
                    "description": "Role name",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleRes"
                            }
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            },
            "post": {
                "tags": ["role-controller"],
                "summary": "Create role",
                "description": "Create a new role in the system",
                "operationId": "createRoleUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "role",
                    "description": "Role to be created",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/RoleReq"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/RoleRes"
                        }
                    },
                    "400": {},
                    "401": {},
                    "409": {
                        "description": "Role with a name or id already exists"
                    },
                    "500": {}
                }
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": ["role-controller"],
                "summary": "Get role",
                "description": "Obtain role with specific id",
                "operationId": "getRoleUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The role ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RoleRes"
                        }
                    },
                    "400": {},
                    "401": {},
                    "404": {
                        "description": "Role cannot be found"
                    },
                    "500": {}
                }
            },
            "put": {
                "tags": ["role-controller"],
                "summary": "Update existing role",
                "operationId": "updateRoleUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The role ID",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "updatedRole",
                    "description": "New role definition",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/RoleReq"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RoleRes"
                        }
                    },
                    "400": {},
                    "401": {},
                    "404": {
                        "description": "Role cannot be found"
                    },
                    "500": {}
                }
            },
            "delete": {
                "tags": ["role-controller"],
                "summary": "Remove role",
                "description": "Delete a role of provided ID",
                "operationId": "deleteRoleUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The role ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {},
                    "401": {},
                    "404": {
                        "description": "Role cannot be found"
                    },
                    "500": {}
                }
            }
        },
        "/api/session": {
            "get": {
                "tags": ["api-controller"],
                "summary": "Information about the current user and his roles",
                "operationId": "getSessionUsingGET",
                "produces": ["*/*", "application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            },
            "post": {
                "tags": ["api-controller"],
                "summary": "Validate provided credentials and create Fusion JWT token",
                "description": "An operation to login a user and generate a JWT token which is returned in id cookie.",
                "operationId": "applySessionUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            },
            "delete": {
                "tags": ["api-controller"],
                "summary": "Removes id cookie from browser. Logout current user.",
                "operationId": "deleteSessionUsingDELETE",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            }
        },
        "/api/suggestions/collections/{collectionId}/schema/fields": {
            "get": {
                "tags": ["suggestion-controller"],
                "summary": "Match fields",
                "operationId": "matchFieldsUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "collectionId",
                    "in": "path",
                    "description": "collectionId",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "limit",
                    "required": false,
                    "type": "integer",
                    "default": 20,
                    "format": "int32"
                }, {
                    "name": "q",
                    "in": "query",
                    "description": "q",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": ["user-controller"],
                "summary": "Get list of users",
                "description": "Return the users list of specific name or from specific realm",
                "operationId": "getUsersUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "realm",
                    "in": "query",
                    "description": "From which users should be returned. If not specified, then users from all realm will be returned.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "username",
                    "in": "query",
                    "description": "Username to filter. If not specified, then all users will returned.",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserPublicViewView"
                            }
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            },
            "post": {
                "tags": ["user-controller"],
                "summary": "Create user",
                "description": "Create a new user in the system",
                "operationId": "createUserUsingPOST_1",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "newUser",
                    "description": "New user data",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateUser"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/UserPublicViewView"
                        }
                    },
                    "400": {},
                    "401": {},
                    "409": {
                        "description": "User with a name or id already exists"
                    },
                    "500": {}
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": ["user-controller"],
                "summary": "Obtain user data",
                "operationId": "getUserUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user to return",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserPublicViewView"
                        }
                    },
                    "400": {},
                    "401": {},
                    "404": {
                        "description": "User cannot be found"
                    },
                    "500": {}
                }
            },
            "put": {
                "tags": ["user-controller"],
                "summary": "Update user",
                "operationId": "updateUserUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user to update",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "updated",
                    "description": "New user definition",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/UpdateUser"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserPublicViewView"
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            },
            "delete": {
                "tags": ["user-controller"],
                "summary": "Remove existing user",
                "operationId": "deleteUserUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user to delete",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {},
                    "401": {},
                    "403": {
                        "description": "User is not allowed to delete itself"
                    },
                    "404": {
                        "description": "User cannot be found"
                    },
                    "500": {}
                }
            },
            "patch": {
                "tags": ["user-controller"],
                "summary": "Update user password",
                "description": "Normal users can update only theirs own password, admin users can change any user password",
                "operationId": "updatePasswordUsingPATCH",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "User ID of which password should be changed",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "updated",
                    "description": "Password update request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/UpdatePassword"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserPublicViewView"
                        }
                    },
                    "403": {
                        "description": "User is not allowed to make a change"
                    },
                    "404": {
                        "description": "User cannot be found"
                    }
                }
            }
        },
        "/oauth2/certificate": {
            "get": {
                "tags": ["o-auth-2-controller"],
                "summary": "Get Fusion Gateway Certificate",
                "description": "Returns certificate which can be use to validate signature of JWT or SAML requests",
                "operationId": "getCertUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            }
        },
        "/oauth2/jwk": {
            "get": {
                "tags": ["o-auth-2-controller"],
                "summary": "Get Java Web Key",
                "description": "Returns Java Web key which can be used for Fusion token validation",
                "operationId": "getJWKUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            }
        },
        "/oauth2/token": {
            "post": {
                "tags": ["o-auth-2-controller"],
                "summary": "Fusion token information and authentication endpoint",
                "description": "Returns an access token. Support basic authentication",
                "operationId": "getTokenUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*", "application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            }
        }
    },
    "definitions": {
        "ApiKeyDto": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "disabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "ApiKeyDto"
        },
        "ApiKeyRealmReq": {
            "title": "ApiKeyRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmReq"
            }, {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "ApiKeyRealmReq"
            }]
        },
        "ApiKeyRealmRes": {
            "title": "ApiKeyRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmRes"
            }, {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "ApiKeyRealmRes"
            }]
        },
        "ApiKeyRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "ApiKeyRequest"
        },
        "BindReq": {
            "type": "object",
            "properties": {
                "dn": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "title": "BindReq"
        },
        "BindRes": {
            "type": "object",
            "properties": {
                "dn": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "title": "BindRes"
        },
        "CharSequence": {
            "type": "object",
            "title": "CharSequence"
        },
        "CodeReq": {
            "type": "object",
            "properties": {
                "authorizationUri": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "redirectUri": {
                    "type": "string"
                },
                "tokenUri": {
                    "type": "string"
                }
            },
            "title": "CodeReq"
        },
        "CodeRes": {
            "type": "object",
            "properties": {
                "authorizationUri": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "redirectUri": {
                    "type": "string"
                },
                "tokenUri": {
                    "type": "string"
                }
            },
            "title": "CodeRes"
        },
        "CreateUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermission"
                    }
                },
                "realm": {
                    "type": "string"
                },
                "realmName": {
                    "type": "string"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "CreateUser"
        },
        "DefaultRealmListElement": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "DefaultRealmListElement"
        },
        "ErrorInfoReq": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "enum": ["CLIENT", "CONFLICT", "FORBIDDEN", "NOT_FOUND", "REQUEST_TIMEOUT", "SERVICE", "SERVICE_TIMEOUT", "SERVICE_UNAVAILABLE", "UNAUTHORIZED", "VALIDATION"]
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "service": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "trace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TraceItemReq"
                    }
                },
                "traceId": {
                    "type": "string"
                }
            },
            "title": "ErrorInfoReq"
        },
        "ErrorInfoRes": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "enum": ["CLIENT", "CONFLICT", "FORBIDDEN", "NOT_FOUND", "REQUEST_TIMEOUT", "SERVICE", "SERVICE_TIMEOUT", "SERVICE_UNAVAILABLE", "UNAUTHORIZED", "VALIDATION"]
                },
                "message": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "service": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "trace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TraceItemRes"
                    }
                },
                "traceId": {
                    "type": "string"
                }
            },
            "title": "ErrorInfoRes"
        },
        "GatewayStatus": {
            "type": "object",
            "properties": {
                "enabledRealms": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "initMeta": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "object"
                },
                "version": {
                    "type": "string"
                }
            },
            "title": "GatewayStatus"
        },
        "GlobPermission": {
            "type": "object",
            "properties": {
                "methods": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
                    }
                },
                "params": {
                    "$ref": "#/definitions/PermissionParams"
                },
                "path": {
                    "type": "string"
                }
            },
            "title": "GlobPermission"
        },
        "GlobPermissionPublicViewView": {
            "type": "object",
            "properties": {
                "methods": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
                    }
                },
                "params": {
                    "$ref": "#/definitions/PermissionParamsPublicViewView"
                },
                "path": {
                    "type": "string"
                }
            },
            "title": "GlobPermissionPublicViewView"
        },
        "GlobPermissionReq": {
            "type": "object",
            "properties": {
                "methods": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
                    }
                },
                "params": {
                    "$ref": "#/definitions/PermissionParamsReq"
                },
                "path": {
                    "type": "string"
                }
            },
            "title": "GlobPermissionReq"
        },
        "GlobPermissionRes": {
            "type": "object",
            "properties": {
                "methods": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
                    }
                },
                "params": {
                    "$ref": "#/definitions/PermissionParamsRes"
                },
                "path": {
                    "type": "string"
                }
            },
            "title": "GlobPermissionRes"
        },
        "Groups": {
            "type": "object",
            "properties": {
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "Groups"
        },
        "IdObject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "title": "IdObject"
        },
        "JWTRealmReq": {
            "title": "JWTRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmReq"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/JwtRealmConfigReq"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "JWTRealmReq"
            }]
        },
        "JWTRealmRes": {
            "title": "JWTRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmRes"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/JwtRealmConfigRes"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "JWTRealmRes"
            }]
        },
        "JwtGroupsReq": {
            "type": "object",
            "properties": {
                "groupKey": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "JwtGroupsReq"
        },
        "JwtGroupsRes": {
            "type": "object",
            "properties": {
                "groupKey": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "JwtGroupsRes"
        },
        "JwtRealmConfigReq": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/JwtGroupsReq"
                },
                "jwkSetUri": {
                    "type": "string"
                },
                "jwtIssuer": {
                    "type": "string"
                },
                "signingKey": {
                    "type": "string"
                },
                "userIdAttribute": {
                    "type": "string"
                }
            },
            "title": "JwtRealmConfigReq"
        },
        "JwtRealmConfigRes": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/JwtGroupsRes"
                },
                "jwkSetUri": {
                    "type": "string"
                },
                "jwtIssuer": {
                    "type": "string"
                },
                "signingKey": {
                    "type": "string"
                },
                "userIdAttribute": {
                    "type": "string"
                }
            },
            "title": "JwtRealmConfigRes"
        },
        "KerberosConfigReq": {
            "type": "object",
            "required": ["keytab", "principal"],
            "properties": {
                "keytab": {
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                }
            },
            "title": "KerberosConfigReq"
        },
        "KerberosConfigRes": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "keytab": {
                    "type": "string"
                },
                "nameRules": {
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                }
            },
            "title": "KerberosConfigRes"
        },
        "KerberosRealmReq": {
            "title": "KerberosRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmReq"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/KerberosConfigReq"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "KerberosRealmReq"
            }]
        },
        "KerberosRealmRes": {
            "title": "KerberosRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmRes"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/KerberosConfigRes"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "KerberosRealmRes"
            }]
        },
        "LDAPRealmReq": {
            "title": "LDAPRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmReq"
            }, {
                "type": "object",
                "required": ["config"],
                "properties": {
                    "config": {
                        "$ref": "#/definitions/LdapRealmConfigReq"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "LDAPRealmReq"
            }]
        },
        "LDAPRealmRes": {
            "title": "LDAPRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmRes"
            }, {
                "type": "object",
                "required": ["config"],
                "properties": {
                    "config": {
                        "$ref": "#/definitions/LdapRealmConfigRes"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "LDAPRealmRes"
            }]
        },
        "LdapGroupsReq": {
            "type": "object",
            "required": ["search"],
            "properties": {
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "search": {
                    "$ref": "#/definitions/SearchReq"
                }
            },
            "title": "LdapGroupsReq"
        },
        "LdapGroupsRes": {
            "type": "object",
            "required": ["search"],
            "properties": {
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "search": {
                    "$ref": "#/definitions/SearchRes"
                }
            },
            "title": "LdapGroupsRes"
        },
        "LdapLoginReq": {
            "type": "object",
            "properties": {
                "bindDnTemplate": {
                    "type": "string"
                },
                "kerberos": {
                    "$ref": "#/definitions/KerberosConfigReq"
                },
                "searchBind": {
                    "$ref": "#/definitions/SearchBindReq"
                }
            },
            "title": "LdapLoginReq"
        },
        "LdapLoginRes": {
            "type": "object",
            "properties": {
                "bindDnTemplate": {
                    "type": "string"
                },
                "kerberos": {
                    "$ref": "#/definitions/KerberosConfigRes"
                },
                "searchBind": {
                    "$ref": "#/definitions/SearchBindRes"
                }
            },
            "title": "LdapLoginRes"
        },
        "LdapRealmConfigReq": {
            "type": "object",
            "required": ["login", "port"],
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "bind": {
                    "$ref": "#/definitions/BindReq"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/LdapGroupsReq"
                },
                "host": {
                    "type": "string"
                },
                "login": {
                    "$ref": "#/definitions/LdapLoginReq"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "ssl": {
                    "type": "boolean"
                }
            },
            "title": "LdapRealmConfigReq"
        },
        "LdapRealmConfigRes": {
            "type": "object",
            "required": ["login", "port"],
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "bind": {
                    "$ref": "#/definitions/BindRes"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/LdapGroupsRes"
                },
                "host": {
                    "type": "string"
                },
                "login": {
                    "$ref": "#/definitions/LdapLoginRes"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "ssl": {
                    "type": "boolean"
                }
            },
            "title": "LdapRealmConfigRes"
        },
        "OidcRealmConfigReq": {
            "type": "object",
            "required": ["code"],
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "clientId": {
                    "type": "string"
                },
                "code": {
                    "$ref": "#/definitions/CodeReq"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/Groups"
                },
                "jwkSetUri": {
                    "type": "string"
                },
                "logoutUrl": {
                    "type": "string"
                },
                "proxy": {
                    "$ref": "#/definitions/ProxyReq"
                },
                "rolesAttribute": {
                    "type": "string"
                },
                "scope": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userIdAttribute": {
                    "type": "string"
                }
            },
            "title": "OidcRealmConfigReq"
        },
        "OidcRealmConfigRes": {
            "type": "object",
            "required": ["code"],
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "clientId": {
                    "type": "string"
                },
                "code": {
                    "$ref": "#/definitions/CodeRes"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/Groups"
                },
                "jwkSetUri": {
                    "type": "string"
                },
                "logoutUrl": {
                    "type": "string"
                },
                "proxy": {
                    "$ref": "#/definitions/ProxyRes"
                },
                "rolesAttribute": {
                    "type": "string"
                },
                "scope": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userIdAttribute": {
                    "type": "string"
                }
            },
            "title": "OidcRealmConfigRes"
        },
        "OidcRealmReq": {
            "title": "OidcRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmReq"
            }, {
                "type": "object",
                "required": ["config"],
                "properties": {
                    "config": {
                        "$ref": "#/definitions/OidcRealmConfigReq"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "OidcRealmReq"
            }]
        },
        "OidcRealmRes": {
            "title": "OidcRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmRes"
            }, {
                "type": "object",
                "required": ["config"],
                "properties": {
                    "config": {
                        "$ref": "#/definitions/OidcRealmConfigRes"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "OidcRealmRes"
            }]
        },
        "PermissionParams": {
            "type": "object",
            "title": "PermissionParams"
        },
        "PermissionParamsPublicViewView": {
            "type": "object",
            "properties": {
                "paramNames": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "PermissionParamsPublicViewView"
        },
        "PermissionParamsReq": {
            "type": "object",
            "title": "PermissionParamsReq"
        },
        "PermissionParamsRes": {
            "type": "object",
            "properties": {
                "paramNames": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "PermissionParamsRes"
        },
        "ProxyReq": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "ProxyReq"
        },
        "ProxyRes": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "ProxyRes"
        },
        "RealmReq": {
            "type": "object",
            "discriminator": "realmType",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "RealmReq"
        },
        "RealmRes": {
            "type": "object",
            "discriminator": "realmType",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "RealmRes"
        },
        "ResponseEntity": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object"
                },
                "statusCode": {
                    "type": "string",
                    "enum": ["ACCEPTED", "ALREADY_REPORTED", "BAD_GATEWAY", "BAD_REQUEST", "BANDWIDTH_LIMIT_EXCEEDED", "CHECKPOINT", "CONFLICT", "CONTINUE", "CREATED", "DESTINATION_LOCKED", "EXPECTATION_FAILED", "FAILED_DEPENDENCY", "FORBIDDEN", "FOUND", "GATEWAY_TIMEOUT", "GONE", "HTTP_VERSION_NOT_SUPPORTED", "IM_USED", "INSUFFICIENT_SPACE_ON_RESOURCE", "INSUFFICIENT_STORAGE", "INTERNAL_SERVER_ERROR", "I_AM_A_TEAPOT", "LENGTH_REQUIRED", "LOCKED", "LOOP_DETECTED", "METHOD_FAILURE", "METHOD_NOT_ALLOWED", "MOVED_PERMANENTLY", "MOVED_TEMPORARILY", "MULTIPLE_CHOICES", "MULTI_STATUS", "NETWORK_AUTHENTICATION_REQUIRED", "NON_AUTHORITATIVE_INFORMATION", "NOT_ACCEPTABLE", "NOT_EXTENDED", "NOT_FOUND", "NOT_IMPLEMENTED", "NOT_MODIFIED", "NO_CONTENT", "OK", "PARTIAL_CONTENT", "PAYLOAD_TOO_LARGE", "PAYMENT_REQUIRED", "PERMANENT_REDIRECT", "PRECONDITION_FAILED", "PRECONDITION_REQUIRED", "PROCESSING", "PROXY_AUTHENTICATION_REQUIRED", "REQUESTED_RANGE_NOT_SATISFIABLE", "REQUEST_ENTITY_TOO_LARGE", "REQUEST_HEADER_FIELDS_TOO_LARGE", "REQUEST_TIMEOUT", "REQUEST_URI_TOO_LONG", "RESET_CONTENT", "SEE_OTHER", "SERVICE_UNAVAILABLE", "SWITCHING_PROTOCOLS", "TEMPORARY_REDIRECT", "TOO_EARLY", "TOO_MANY_REQUESTS", "UNAUTHORIZED", "UNAVAILABLE_FOR_LEGAL_REASONS", "UNPROCESSABLE_ENTITY", "UNSUPPORTED_MEDIA_TYPE", "UPGRADE_REQUIRED", "URI_TOO_LONG", "USE_PROXY", "VARIANT_ALSO_NEGOTIATES"]
                },
                "statusCodeValue": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ResponseEntity"
        },
        "RoleReq": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermissionReq"
                    }
                },
                "uiPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "RoleReq"
        },
        "RoleRes": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermissionRes"
                    }
                },
                "uiPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "RoleRes"
        },
        "SAMLRealmReq": {
            "title": "SAMLRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmReq"
            }, {
                "type": "object",
                "required": ["config"],
                "properties": {
                    "config": {
                        "$ref": "#/definitions/SamlConfigReq"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "SAMLRealmReq"
            }]
        },
        "SAMLRealmRes": {
            "title": "SAMLRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmRes"
            }, {
                "type": "object",
                "required": ["config"],
                "properties": {
                    "config": {
                        "$ref": "#/definitions/SamlConfigRes"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "SAMLRealmRes"
            }]
        },
        "SamlConfigReq": {
            "type": "object",
            "properties": {
                "appIssuer": {
                    "type": "string"
                },
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "certificateFingerprint": {
                    "type": "string"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/SamlGroupsReq"
                },
                "idpUrl": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "logoutUrl": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                },
                "userIdAttribute": {
                    "type": "string"
                }
            },
            "title": "SamlConfigReq"
        },
        "SamlConfigRes": {
            "type": "object",
            "properties": {
                "appIssuer": {
                    "type": "string"
                },
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "certificateFingerprint": {
                    "type": "string"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/SamlGroupsRes"
                },
                "idpUrl": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "logoutUrl": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                },
                "userIdAttribute": {
                    "type": "string"
                }
            },
            "title": "SamlConfigRes"
        },
        "SamlGroupsReq": {
            "type": "object",
            "properties": {
                "groupNameAttribute": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "SamlGroupsReq"
        },
        "SamlGroupsRes": {
            "type": "object",
            "properties": {
                "groupNameAttribute": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "SamlGroupsRes"
        },
        "SearchBindReq": {
            "type": "object",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "filterTemplate": {
                    "type": "string"
                }
            },
            "title": "SearchBindReq"
        },
        "SearchBindRes": {
            "type": "object",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "filterTemplate": {
                    "type": "string"
                }
            },
            "title": "SearchBindRes"
        },
        "SearchReq": {
            "type": "object",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "filterTemplate": {
                    "type": "string"
                },
                "groupNameAttribute": {
                    "type": "string"
                },
                "subtree": {
                    "type": "boolean"
                }
            },
            "title": "SearchReq"
        },
        "SearchRes": {
            "type": "object",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "filterTemplate": {
                    "type": "string"
                },
                "groupNameAttribute": {
                    "type": "string"
                },
                "subtree": {
                    "type": "boolean"
                }
            },
            "title": "SearchRes"
        },
        "Token": {
            "type": "object",
            "required": ["access_token", "expires_at", "expires_in", "issuer", "token_type"],
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInB...."
                },
                "expires_at": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1603355198
                },
                "expires_in": {
                    "type": "integer",
                    "format": "int64",
                    "example": 15000
                },
                "issuer": {
                    "type": "string",
                    "example": "http://proxy:6764/oauth2/default"
                },
                "token_type": {
                    "type": "string",
                    "example": "bearer"
                }
            },
            "title": "Token"
        },
        "TraceItemReq": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "enum": ["CLIENT", "CONFLICT", "FORBIDDEN", "NOT_FOUND", "REQUEST_TIMEOUT", "SERVICE", "SERVICE_TIMEOUT", "SERVICE_UNAVAILABLE", "UNAUTHORIZED", "VALIDATION"]
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "service": {
                    "type": "string"
                },
                "traceId": {
                    "type": "string"
                }
            },
            "title": "TraceItemReq"
        },
        "TraceItemRes": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "enum": ["CLIENT", "CONFLICT", "FORBIDDEN", "NOT_FOUND", "REQUEST_TIMEOUT", "SERVICE", "SERVICE_TIMEOUT", "SERVICE_UNAVAILABLE", "UNAUTHORIZED", "VALIDATION"]
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "service": {
                    "type": "string"
                },
                "traceId": {
                    "type": "string"
                }
            },
            "title": "TraceItemRes"
        },
        "TrustedConfigReq": {
            "type": "object",
            "properties": {
                "allowedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/TrustedGroupsReq"
                },
                "identityKey": {
                    "type": "string"
                },
                "trustedProxyHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "TrustedConfigReq"
        },
        "TrustedConfigRes": {
            "type": "object",
            "properties": {
                "allowedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/TrustedGroupsRes"
                },
                "identityKey": {
                    "type": "string"
                },
                "trustedProxyHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "TrustedConfigRes"
        },
        "TrustedGroupsReq": {
            "type": "object",
            "properties": {
                "delimiter": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "TrustedGroupsReq"
        },
        "TrustedGroupsRes": {
            "type": "object",
            "properties": {
                "delimiter": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "TrustedGroupsRes"
        },
        "TrustedHTTPRealmReq": {
            "title": "TrustedHTTPRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmReq"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/TrustedConfigReq"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "TrustedHTTPRealmReq"
            }]
        },
        "TrustedHTTPRealmRes": {
            "title": "TrustedHTTPRealm",
            "allOf": [{
                "$ref": "#/definitions/RealmRes"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/TrustedConfigRes"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "TrustedHTTPRealmRes"
            }]
        },
        "UpdatePassword": {
            "type": "object",
            "properties": {
                "currentPassword": {
                    "$ref": "#/definitions/CharSequence"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "$ref": "#/definitions/CharSequence"
                },
                "passwordConfirm": {
                    "$ref": "#/definitions/CharSequence"
                }
            },
            "title": "UpdatePassword"
        },
        "UpdateUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermission"
                    }
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                }
            },
            "title": "UpdateUser"
        },
        "UserPublicViewView": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermissionPublicViewView"
                    }
                },
                "realmName": {
                    "type": "string"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "UserPublicViewView"
        }
    }
}