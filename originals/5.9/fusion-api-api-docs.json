{
  "openapi": "3.0.3",
  "info": {
    "title": "Fusion Proxy API",
    "description": "API for the Proxy for Lucidworks Fusion",
    "termsOfService": "https://lucidworks.com/legal/developer-license-agreement/",
    "contact": {
      "name": "Lucidworks",
      "url": "www.lucidworks.com",
      "email": "support@lucidworks.com"
    },
    "license": {
      "name": "License of API",
      "url": "https://lucidworks.com/legal/developer-license-agreement/"
    },
    "version": "5.9.4"
  },
  "tags": [
    {
      "name": "api-controller",
      "description": "Basic system and user status information"
    },
    {
      "name": "api-key-controller",
      "description": "Api Key Controller"
    },
    {
      "name": "o-auth-2-controller",
      "description": "Fusion OAuth2 endpoint"
    },
    {
      "name": "realm-controller",
      "description": "Realms' management"
    },
    {
      "name": "role-controller",
      "description": "Roles' management"
    },
    {
      "name": "suggestion-controller",
      "description": "Suggestion endpoint"
    },
    {
      "name": "user-controller",
      "description": "Fusion's Users management"
    }
  ],
  "paths": {
    "/api": {
      "get": {
        "tags": [
          "api-controller"
        ],
        "summary": "Information about the available realms and known services",
        "operationId": "getStatusUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayStatus"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      },
      "post": {
        "tags": [
          "api-controller"
        ],
        "summary": "Set an initial admin password",
        "operationId": "createUserUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Initial password set"
          },
          "400": {},
          "401": {},
          "409": {
            "description": "Password already set"
          },
          "500": {}
        }
      }
    },
    "/api/session": {
      "get": {
        "tags": [
          "api-controller"
        ],
        "summary": "Information about the current user and his roles",
        "operationId": "getSessionUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      },
      "post": {
        "tags": [
          "api-controller"
        ],
        "summary": "Validate provided credentials and create Fusion JWT token",
        "description": "An operation to login a user and generate a JWT token which is returned in id cookie.",
        "operationId": "applySessionUsingPOST",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {},
          "401": {},
          "500": {}
        }
      },
      "delete": {
        "tags": [
          "api-controller"
        ],
        "summary": "Removes id cookie from browser. Logout current user.",
        "operationId": "deleteSessionUsingDELETE",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {},
          "401": {},
          "500": {}
        }
      }
    },
    "/api/api-key": {
      "get": {
        "tags": [
          "api-key-controller"
        ],
        "summary": "Returns all api keys",
        "description": "Deleted keys are filtered",
        "operationId": "getAllUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyDto"
                  }
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      },
      "post": {
        "tags": [
          "api-key-controller"
        ],
        "summary": "Creates new api key based on request body",
        "operationId": "createApiKeyUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDto"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {
            "description": "Key encryption exception"
          }
        }
      }
    },
    "/api/api-key/{id}": {
      "get": {
        "tags": [
          "api-key-controller"
        ],
        "summary": "Returns api key with specific id",
        "description": "We return not found error when key is deleted",
        "operationId": "getByIdUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The api key ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDto"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "404": {
            "description": "Api key cannot be found"
          },
          "500": {}
        }
      },
      "delete": {
        "tags": [
          "api-key-controller"
        ],
        "summary": "Removes api key with specific id",
        "operationId": "deleteByIdUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The api key ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {},
          "401": {},
          "500": {}
        }
      }
    },
    "/oauth2/certificate": {
      "get": {
        "tags": [
          "o-auth-2-controller"
        ],
        "summary": "Get Fusion Gateway Certificate",
        "description": "Returns certificate which can be use to validate signature of JWT or SAML requests",
        "operationId": "getCertUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      }
    },
    "/oauth2/jwk": {
      "get": {
        "tags": [
          "o-auth-2-controller"
        ],
        "summary": "Get Java Web Key",
        "description": "Returns Java Web key which can be used for Fusion token validation",
        "operationId": "getJWKUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "tags": [
          "o-auth-2-controller"
        ],
        "summary": "Fusion token information and authentication endpoint",
        "description": "Returns an access token. Support basic authentication",
        "operationId": "getTokenUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      }
    },
    "/api/realm-configs": {
      "get": {
        "tags": [
          "realm-controller"
        ],
        "summary": "Obtain multiple realms",
        "description": "Return all realms unless name filter parameter is specified",
        "operationId": "getRealmsUsingGET",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Realm name to be returned",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RealmRes"
                  }
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      },
      "post": {
        "tags": [
          "realm-controller"
        ],
        "summary": "Create Realm",
        "description": "Creates a realm based on provided configuration",
        "operationId": "createRealmUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmReq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RealmRes"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "409": {
            "description": "Realm with name or id already exists"
          },
          "500": {}
        }
      }
    },
    "/api/realm-configs/default": {
      "get": {
        "tags": [
          "realm-controller"
        ],
        "summary": "Returns a potential default realms with a flag which one is currently default",
        "operationId": "getDefaultRealmListUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DefaultRealmListElement"
                  }
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      },
      "put": {
        "tags": [
          "realm-controller"
        ],
        "summary": "Set Default realm",
        "operationId": "setDefaultRealmUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdObject"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {},
          "401": {},
          "500": {}
        }
      }
    },
    "/api/realm-configs/{id}": {
      "get": {
        "tags": [
          "realm-controller"
        ],
        "summary": "Get Realm",
        "description": "Obtain configuration of existing realm",
        "operationId": "getRealmUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The realm ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RealmRes"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "404": {
            "description": "Realm not found"
          },
          "500": {}
        }
      },
      "put": {
        "tags": [
          "realm-controller"
        ],
        "summary": "Update an existing realm",
        "operationId": "updateRealmUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The realm ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RealmRes"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "404": {
            "description": "Realm not found"
          },
          "500": {}
        }
      },
      "delete": {
        "tags": [
          "realm-controller"
        ],
        "summary": "Delete Realm",
        "description": "Remove existing realm",
        "operationId": "deleteRealmUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The realm ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {},
          "401": {},
          "404": {
            "description": "Realm not found"
          },
          "500": {}
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Return all roles defined in the Fusion or role with a specified name",
        "operationId": "getRolesUsingGET",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Role name",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRes"
                  }
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      },
      "post": {
        "tags": [
          "role-controller"
        ],
        "summary": "Create role",
        "description": "Create a new role in the system",
        "operationId": "createRoleUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleReq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RoleRes"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "409": {
            "description": "Role with a name or id already exists"
          },
          "500": {}
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Get role",
        "description": "Obtain role with specific id",
        "operationId": "getRoleUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The role ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RoleRes"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "404": {
            "description": "Role cannot be found"
          },
          "500": {}
        }
      },
      "put": {
        "tags": [
          "role-controller"
        ],
        "summary": "Update existing role",
        "operationId": "updateRoleUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The role ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RoleRes"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "404": {
            "description": "Role cannot be found"
          },
          "500": {}
        }
      },
      "delete": {
        "tags": [
          "role-controller"
        ],
        "summary": "Remove role",
        "description": "Delete a role of provided ID",
        "operationId": "deleteRoleUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The role ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {},
          "401": {},
          "404": {
            "description": "Role cannot be found"
          },
          "500": {}
        }
      }
    },
    "/api/suggestions/collections/{collectionId}/schema/fields": {
      "get": {
        "tags": [
          "suggestion-controller"
        ],
        "summary": "Match fields",
        "operationId": "matchFieldsUsingGET",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "q",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get list of users",
        "description": "Return the users list of specific name or from specific realm",
        "operationId": "getUsersUsingGET",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Username to filter. If not specified, then all users will returned.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realm",
            "in": "query",
            "description": "From which users should be returned. If not specified, then users from all realm will be returned.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPublicViewView"
                  }
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Create user",
        "description": "Create a new user in the system",
        "operationId": "createUserUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicViewView"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "409": {
            "description": "User with a name or id already exists"
          },
          "500": {}
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Obtain user data",
        "operationId": "getUserUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicViewView"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "404": {
            "description": "User cannot be found"
          },
          "500": {}
        }
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Update user",
        "operationId": "updateUserUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicViewView"
                }
              }
            }
          },
          "400": {},
          "401": {},
          "500": {}
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "Remove existing user",
        "operationId": "deleteUserUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {},
          "401": {},
          "403": {
            "description": "User is not allowed to delete itself"
          },
          "404": {
            "description": "User cannot be found"
          },
          "500": {}
        }
      },
      "patch": {
        "tags": [
          "user-controller"
        ],
        "summary": "Update user password",
        "description": "Normal users can update only theirs own password, admin users can change any user password",
        "operationId": "updatePasswordUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID of which password should be changed",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicViewView"
                }
              }
            }
          },
          "403": {
            "description": "User is not allowed to make a change"
          },
          "404": {
            "description": "User cannot be found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiKeyDto": {
        "title": "ApiKeyDto",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "disabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiKeyRealmReq": {
        "title": "ApiKeyRealm",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmReq"
          },
          {
            "title": "ApiKeyRealmReq",
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "ApiKeyRealmRes": {
        "title": "ApiKeyRealm",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmRes"
          },
          {
            "title": "ApiKeyRealmRes",
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "ApiKeyRequest": {
        "title": "ApiKeyRequest",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BindReq": {
        "title": "BindReq",
        "type": "object",
        "properties": {
          "dn": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "BindRes": {
        "title": "BindRes",
        "type": "object",
        "properties": {
          "dn": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "CharSequence": {
        "title": "CharSequence",
        "type": "object"
      },
      "CodeReq": {
        "title": "CodeReq",
        "type": "object",
        "properties": {
          "authorizationUri": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "redirectUri": {
            "type": "string"
          },
          "tokenUri": {
            "type": "string"
          }
        }
      },
      "CodeRes": {
        "title": "CodeRes",
        "type": "object",
        "properties": {
          "authorizationUri": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "redirectUri": {
            "type": "string"
          },
          "tokenUri": {
            "type": "string"
          }
        }
      },
      "CreateUser": {
        "title": "CreateUser",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passwordHash": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobPermission"
            }
          },
          "realm": {
            "type": "string"
          },
          "realmName": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timezone": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "DefaultRealmListElement": {
        "title": "DefaultRealmListElement",
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ErrorInfoReq": {
        "title": "ErrorInfoReq",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CONFLICT",
              "FORBIDDEN",
              "NOT_FOUND",
              "REQUEST_TIMEOUT",
              "SERVICE",
              "SERVICE_TIMEOUT",
              "SERVICE_UNAVAILABLE",
              "UNAUTHORIZED",
              "VALIDATION"
            ]
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "path": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "service": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "trace": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TraceItemReq"
            }
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "ErrorInfoRes": {
        "title": "ErrorInfoRes",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CONFLICT",
              "FORBIDDEN",
              "NOT_FOUND",
              "REQUEST_TIMEOUT",
              "SERVICE",
              "SERVICE_TIMEOUT",
              "SERVICE_UNAVAILABLE",
              "UNAUTHORIZED",
              "VALIDATION"
            ]
          },
          "message": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "path": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "service": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "trace": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TraceItemRes"
            }
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "GatewayStatus": {
        "title": "GatewayStatus",
        "type": "object",
        "properties": {
          "enabledRealms": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "initMeta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "status": {
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "GlobPermission": {
        "title": "GlobPermission",
        "type": "object",
        "properties": {
          "methods": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ]
            }
          },
          "params": {
            "$ref": "#/components/schemas/PermissionParams"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "GlobPermissionPublicViewView": {
        "title": "GlobPermissionPublicViewView",
        "type": "object",
        "properties": {
          "methods": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ]
            }
          },
          "params": {
            "$ref": "#/components/schemas/PermissionParamsPublicViewView"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "GlobPermissionReq": {
        "title": "GlobPermissionReq",
        "type": "object",
        "properties": {
          "methods": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ]
            }
          },
          "params": {
            "$ref": "#/components/schemas/PermissionParamsReq"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "GlobPermissionRes": {
        "title": "GlobPermissionRes",
        "type": "object",
        "properties": {
          "methods": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ]
            }
          },
          "params": {
            "$ref": "#/components/schemas/PermissionParamsRes"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "Groups": {
        "title": "Groups",
        "type": "object",
        "properties": {
          "roleMapping": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "IdObject": {
        "title": "IdObject",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "JWTRealmReq": {
        "title": "JWTRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/JwtRealmConfigReq"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmReq"
          },
          {
            "title": "JWTRealmReq",
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/JwtRealmConfigReq"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "JWTRealmRes": {
        "title": "JWTRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/JwtRealmConfigRes"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmRes"
          },
          {
            "title": "JWTRealmRes",
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/JwtRealmConfigRes"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "JwtGroupsReq": {
        "title": "JwtGroupsReq",
        "type": "object",
        "properties": {
          "groupKey": {
            "type": "string"
          },
          "roleMapping": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "JwtGroupsRes": {
        "title": "JwtGroupsRes",
        "type": "object",
        "properties": {
          "groupKey": {
            "type": "string"
          },
          "roleMapping": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "JwtRealmConfigReq": {
        "title": "JwtRealmConfigReq",
        "type": "object",
        "properties": {
          "autoCreateUsers": {
            "type": "boolean"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/JwtGroupsReq"
          },
          "jwkSetUri": {
            "type": "string"
          },
          "jwtIssuer": {
            "type": "string"
          },
          "signingKey": {
            "type": "string"
          },
          "userIdAttribute": {
            "type": "string"
          }
        }
      },
      "JwtRealmConfigRes": {
        "title": "JwtRealmConfigRes",
        "type": "object",
        "properties": {
          "autoCreateUsers": {
            "type": "boolean"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/JwtGroupsRes"
          },
          "jwkSetUri": {
            "type": "string"
          },
          "jwtIssuer": {
            "type": "string"
          },
          "signingKey": {
            "type": "string"
          },
          "userIdAttribute": {
            "type": "string"
          }
        }
      },
      "KerberosConfigReq": {
        "title": "KerberosConfigReq",
        "required": [
          "keytab",
          "principal"
        ],
        "type": "object",
        "properties": {
          "keytab": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          }
        }
      },
      "KerberosConfigRes": {
        "title": "KerberosConfigRes",
        "type": "object",
        "properties": {
          "autoCreateUsers": {
            "type": "boolean"
          },
          "keytab": {
            "type": "string"
          },
          "nameRules": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          }
        }
      },
      "KerberosRealmReq": {
        "title": "KerberosRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/KerberosConfigReq"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmReq"
          },
          {
            "title": "KerberosRealmReq",
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/KerberosConfigReq"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "KerberosRealmRes": {
        "title": "KerberosRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/KerberosConfigRes"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmRes"
          },
          {
            "title": "KerberosRealmRes",
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/KerberosConfigRes"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "LDAPRealmReq": {
        "title": "LDAPRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/LdapRealmConfigReq"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmReq"
          },
          {
            "title": "LDAPRealmReq",
            "required": [
              "config"
            ],
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/LdapRealmConfigReq"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "LDAPRealmRes": {
        "title": "LDAPRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/LdapRealmConfigRes"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmRes"
          },
          {
            "title": "LDAPRealmRes",
            "required": [
              "config"
            ],
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/LdapRealmConfigRes"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "LdapGroupsReq": {
        "title": "LdapGroupsReq",
        "required": [
          "search"
        ],
        "type": "object",
        "properties": {
          "roleMapping": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "search": {
            "$ref": "#/components/schemas/SearchReq"
          }
        }
      },
      "LdapGroupsRes": {
        "title": "LdapGroupsRes",
        "required": [
          "search"
        ],
        "type": "object",
        "properties": {
          "roleMapping": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "search": {
            "$ref": "#/components/schemas/SearchRes"
          }
        }
      },
      "LdapLoginReq": {
        "title": "LdapLoginReq",
        "type": "object",
        "properties": {
          "bindDnTemplate": {
            "type": "string"
          },
          "kerberos": {
            "$ref": "#/components/schemas/KerberosConfigReq"
          },
          "searchBind": {
            "$ref": "#/components/schemas/SearchBindReq"
          }
        }
      },
      "LdapLoginRes": {
        "title": "LdapLoginRes",
        "type": "object",
        "properties": {
          "bindDnTemplate": {
            "type": "string"
          },
          "kerberos": {
            "$ref": "#/components/schemas/KerberosConfigRes"
          },
          "searchBind": {
            "$ref": "#/components/schemas/SearchBindRes"
          }
        }
      },
      "LdapRealmConfigReq": {
        "title": "LdapRealmConfigReq",
        "required": [
          "login",
          "port"
        ],
        "type": "object",
        "properties": {
          "autoCreateUsers": {
            "type": "boolean"
          },
          "bind": {
            "$ref": "#/components/schemas/BindReq"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/LdapGroupsReq"
          },
          "host": {
            "type": "string"
          },
          "login": {
            "$ref": "#/components/schemas/LdapLoginReq"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "ssl": {
            "type": "boolean"
          }
        }
      },
      "LdapRealmConfigRes": {
        "title": "LdapRealmConfigRes",
        "required": [
          "login",
          "port"
        ],
        "type": "object",
        "properties": {
          "autoCreateUsers": {
            "type": "boolean"
          },
          "bind": {
            "$ref": "#/components/schemas/BindRes"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/LdapGroupsRes"
          },
          "host": {
            "type": "string"
          },
          "login": {
            "$ref": "#/components/schemas/LdapLoginRes"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "ssl": {
            "type": "boolean"
          }
        }
      },
      "OidcRealmConfigReq": {
        "title": "OidcRealmConfigReq",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "autoCreateUsers": {
            "type": "boolean"
          },
          "clientId": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/CodeReq"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/Groups"
          },
          "jwkSetUri": {
            "type": "string"
          },
          "logoutUrl": {
            "type": "string"
          },
          "proxy": {
            "$ref": "#/components/schemas/ProxyReq"
          },
          "rolesAttribute": {
            "type": "string"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userIdAttribute": {
            "type": "string"
          }
        }
      },
      "OidcRealmConfigRes": {
        "title": "OidcRealmConfigRes",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "autoCreateUsers": {
            "type": "boolean"
          },
          "clientId": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/CodeRes"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/Groups"
          },
          "jwkSetUri": {
            "type": "string"
          },
          "logoutUrl": {
            "type": "string"
          },
          "proxy": {
            "$ref": "#/components/schemas/ProxyRes"
          },
          "rolesAttribute": {
            "type": "string"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userIdAttribute": {
            "type": "string"
          }
        }
      },
      "OidcRealmReq": {
        "title": "OidcRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/OidcRealmConfigReq"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmReq"
          },
          {
            "title": "OidcRealmReq",
            "required": [
              "config"
            ],
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/OidcRealmConfigReq"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "OidcRealmRes": {
        "title": "OidcRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/OidcRealmConfigRes"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmRes"
          },
          {
            "title": "OidcRealmRes",
            "required": [
              "config"
            ],
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/OidcRealmConfigRes"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "PermissionParams": {
        "title": "PermissionParams",
        "type": "object"
      },
      "PermissionParamsPublicViewView": {
        "title": "PermissionParamsPublicViewView",
        "type": "object",
        "properties": {
          "paramNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PermissionParamsReq": {
        "title": "PermissionParamsReq",
        "type": "object"
      },
      "PermissionParamsRes": {
        "title": "PermissionParamsRes",
        "type": "object",
        "properties": {
          "paramNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProxyReq": {
        "title": "ProxyReq",
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "ProxyRes": {
        "title": "ProxyRes",
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "RealmReq": {
        "title": "RealmReq",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RealmRes": {
        "title": "RealmRes",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseEntity": {
        "title": "ResponseEntity",
        "type": "object",
        "properties": {
          "body": {
            "type": "object"
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "ACCEPTED",
              "ALREADY_REPORTED",
              "BAD_GATEWAY",
              "BAD_REQUEST",
              "BANDWIDTH_LIMIT_EXCEEDED",
              "CHECKPOINT",
              "CONFLICT",
              "CONTINUE",
              "CREATED",
              "DESTINATION_LOCKED",
              "EXPECTATION_FAILED",
              "FAILED_DEPENDENCY",
              "FORBIDDEN",
              "FOUND",
              "GATEWAY_TIMEOUT",
              "GONE",
              "HTTP_VERSION_NOT_SUPPORTED",
              "IM_USED",
              "INSUFFICIENT_SPACE_ON_RESOURCE",
              "INSUFFICIENT_STORAGE",
              "INTERNAL_SERVER_ERROR",
              "I_AM_A_TEAPOT",
              "LENGTH_REQUIRED",
              "LOCKED",
              "LOOP_DETECTED",
              "METHOD_FAILURE",
              "METHOD_NOT_ALLOWED",
              "MOVED_PERMANENTLY",
              "MOVED_TEMPORARILY",
              "MULTIPLE_CHOICES",
              "MULTI_STATUS",
              "NETWORK_AUTHENTICATION_REQUIRED",
              "NON_AUTHORITATIVE_INFORMATION",
              "NOT_ACCEPTABLE",
              "NOT_EXTENDED",
              "NOT_FOUND",
              "NOT_IMPLEMENTED",
              "NOT_MODIFIED",
              "NO_CONTENT",
              "OK",
              "PARTIAL_CONTENT",
              "PAYLOAD_TOO_LARGE",
              "PAYMENT_REQUIRED",
              "PERMANENT_REDIRECT",
              "PRECONDITION_FAILED",
              "PRECONDITION_REQUIRED",
              "PROCESSING",
              "PROXY_AUTHENTICATION_REQUIRED",
              "REQUESTED_RANGE_NOT_SATISFIABLE",
              "REQUEST_ENTITY_TOO_LARGE",
              "REQUEST_HEADER_FIELDS_TOO_LARGE",
              "REQUEST_TIMEOUT",
              "REQUEST_URI_TOO_LONG",
              "RESET_CONTENT",
              "SEE_OTHER",
              "SERVICE_UNAVAILABLE",
              "SWITCHING_PROTOCOLS",
              "TEMPORARY_REDIRECT",
              "TOO_EARLY",
              "TOO_MANY_REQUESTS",
              "UNAUTHORIZED",
              "UNAVAILABLE_FOR_LEGAL_REASONS",
              "UNPROCESSABLE_ENTITY",
              "UNSUPPORTED_MEDIA_TYPE",
              "UPGRADE_REQUIRED",
              "URI_TOO_LONG",
              "USE_PROXY",
              "VARIANT_ALSO_NEGOTIATES"
            ]
          },
          "statusCodeValue": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RoleReq": {
        "title": "RoleReq",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "desc": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobPermissionReq"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RoleRes": {
        "title": "RoleRes",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "desc": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobPermissionRes"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SAMLRealmReq": {
        "title": "SAMLRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/SamlConfigReq"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmReq"
          },
          {
            "title": "SAMLRealmReq",
            "required": [
              "config"
            ],
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/SamlConfigReq"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "SAMLRealmRes": {
        "title": "SAMLRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/SamlConfigRes"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmRes"
          },
          {
            "title": "SAMLRealmRes",
            "required": [
              "config"
            ],
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/SamlConfigRes"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "SamlConfigReq": {
        "title": "SamlConfigReq",
        "type": "object",
        "properties": {
          "appIssuer": {
            "type": "string"
          },
          "autoCreateUsers": {
            "type": "boolean"
          },
          "certificateFingerprint": {
            "type": "string"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/SamlGroupsReq"
          },
          "idpUrl": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "logoutUrl": {
            "type": "string"
          },
          "redirectUrl": {
            "type": "string"
          },
          "userIdAttribute": {
            "type": "string"
          }
        }
      },
      "SamlConfigRes": {
        "title": "SamlConfigRes",
        "type": "object",
        "properties": {
          "appIssuer": {
            "type": "string"
          },
          "autoCreateUsers": {
            "type": "boolean"
          },
          "certificateFingerprint": {
            "type": "string"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/SamlGroupsRes"
          },
          "idpUrl": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "logoutUrl": {
            "type": "string"
          },
          "redirectUrl": {
            "type": "string"
          },
          "userIdAttribute": {
            "type": "string"
          }
        }
      },
      "SamlGroupsReq": {
        "title": "SamlGroupsReq",
        "type": "object",
        "properties": {
          "groupNameAttribute": {
            "type": "string"
          },
          "roleMapping": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "SamlGroupsRes": {
        "title": "SamlGroupsRes",
        "type": "object",
        "properties": {
          "groupNameAttribute": {
            "type": "string"
          },
          "roleMapping": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "SearchBindReq": {
        "title": "SearchBindReq",
        "type": "object",
        "properties": {
          "baseDn": {
            "type": "string"
          },
          "filterTemplate": {
            "type": "string"
          }
        }
      },
      "SearchBindRes": {
        "title": "SearchBindRes",
        "type": "object",
        "properties": {
          "baseDn": {
            "type": "string"
          },
          "filterTemplate": {
            "type": "string"
          }
        }
      },
      "SearchReq": {
        "title": "SearchReq",
        "type": "object",
        "properties": {
          "baseDn": {
            "type": "string"
          },
          "filterTemplate": {
            "type": "string"
          },
          "groupNameAttribute": {
            "type": "string"
          },
          "subtree": {
            "type": "boolean"
          }
        }
      },
      "SearchRes": {
        "title": "SearchRes",
        "type": "object",
        "properties": {
          "baseDn": {
            "type": "string"
          },
          "filterTemplate": {
            "type": "string"
          },
          "groupNameAttribute": {
            "type": "string"
          },
          "subtree": {
            "type": "boolean"
          }
        }
      },
      "Token": {
        "title": "Token",
        "required": [
          "access_token",
          "expires_at",
          "expires_in",
          "issuer",
          "token_type"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInB...."
          },
          "expires_at": {
            "type": "integer",
            "format": "int64",
            "example": 1603355198
          },
          "expires_in": {
            "type": "integer",
            "format": "int64",
            "example": 15000
          },
          "issuer": {
            "type": "string",
            "example": "http://proxy:6764/oauth2/default"
          },
          "token_type": {
            "type": "string",
            "example": "bearer"
          }
        }
      },
      "TraceItemReq": {
        "title": "TraceItemReq",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CONFLICT",
              "FORBIDDEN",
              "NOT_FOUND",
              "REQUEST_TIMEOUT",
              "SERVICE",
              "SERVICE_TIMEOUT",
              "SERVICE_UNAVAILABLE",
              "UNAUTHORIZED",
              "VALIDATION"
            ]
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "path": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "service": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "TraceItemRes": {
        "title": "TraceItemRes",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CONFLICT",
              "FORBIDDEN",
              "NOT_FOUND",
              "REQUEST_TIMEOUT",
              "SERVICE",
              "SERVICE_TIMEOUT",
              "SERVICE_UNAVAILABLE",
              "UNAUTHORIZED",
              "VALIDATION"
            ]
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "path": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "service": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "TrustedConfigReq": {
        "title": "TrustedConfigReq",
        "type": "object",
        "properties": {
          "allowedIps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "autoCreateUsers": {
            "type": "boolean"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/TrustedGroupsReq"
          },
          "identityKey": {
            "type": "string"
          },
          "trustedProxyHeaders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TrustedConfigRes": {
        "title": "TrustedConfigRes",
        "type": "object",
        "properties": {
          "allowedIps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "autoCreateUsers": {
            "type": "boolean"
          },
          "ephemeralUsers": {
            "type": "boolean"
          },
          "groups": {
            "$ref": "#/components/schemas/TrustedGroupsRes"
          },
          "identityKey": {
            "type": "string"
          },
          "trustedProxyHeaders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TrustedGroupsReq": {
        "title": "TrustedGroupsReq",
        "type": "object",
        "properties": {
          "delimiter": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "roleMapping": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "TrustedGroupsRes": {
        "title": "TrustedGroupsRes",
        "type": "object",
        "properties": {
          "delimiter": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "roleMapping": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "TrustedHTTPRealmReq": {
        "title": "TrustedHTTPRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/TrustedConfigReq"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmReq"
          },
          {
            "title": "TrustedHTTPRealmReq",
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/TrustedConfigReq"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "TrustedHTTPRealmRes": {
        "title": "TrustedHTTPRealm",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/TrustedConfigRes"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/RealmRes"
          },
          {
            "title": "TrustedHTTPRealmRes",
            "type": "object",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/TrustedConfigRes"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "enabled": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roleNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "UpdatePassword": {
        "title": "UpdatePassword",
        "type": "object",
        "properties": {
          "currentPassword": {
            "$ref": "#/components/schemas/CharSequence"
          },
          "id": {
            "type": "string"
          },
          "password": {
            "$ref": "#/components/schemas/CharSequence"
          },
          "passwordConfirm": {
            "$ref": "#/components/schemas/CharSequence"
          }
        }
      },
      "UpdateUser": {
        "title": "UpdateUser",
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "passwordHash": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobPermission"
            }
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timezone": {
            "type": "string"
          }
        }
      },
      "UserPublicViewView": {
        "title": "UserPublicViewView",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobPermissionPublicViewView"
            }
          },
          "realmName": {
            "type": "string"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timezone": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          }
        }
      }
    }
  }
}
