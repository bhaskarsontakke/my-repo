{
  "swagger": "2.0",
  "info": {
    "version": "4.2.6-rc1",
    "title": "Fusion Service groups"
  },
  "basePath": "/api/apollo",
  "tags": [
    {
      "name": "groups"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/groups": {
      "get": {
        "summary": "Get all entities",
        "description": "",
        "operationId": "getAllEntities",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Entity"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new entity",
        "description": "",
        "operationId": "createEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted configuration values",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ObjectGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          }
        }
      }
    },
    "/groups/_schema": {
      "get": {
        "summary": "Get JSON schema for objects managed by this API",
        "description": "",
        "operationId": "getEntitySchema",
        "produces": [
          "application/schema+json; qs=1.0",
          "application/json; qs=0.9"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ObjectType"
            }
          }
        }
      }
    },
    "/groups/status": {
      "get": {
        "summary": "Get the status of the service",
        "description": "",
        "operationId": "getStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceStatus"
              }
            }
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "summary": "Get the specified entity",
        "description": "",
        "operationId": "getEntity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The entity ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          }
        }
      },
      "put": {
        "summary": "Update an entity",
        "description": "",
        "operationId": "updateEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The entity ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An entity tag to match",
            "required": false,
            "type": "string",
            "default": "\"-1\""
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted configuration values",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ObjectGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an entity",
        "description": "",
        "operationId": "deleteEntity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The entity ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An entity tag to match",
            "required": false,
            "type": "string",
            "default": "\"-1\""
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Entity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ObjectType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "String",
            "Number",
            "Integer",
            "Boolean",
            "Object",
            "Array",
            "Null",
            "Ref"
          ]
        },
        "title": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        },
        "required": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "#/definitions/AnyType"
          }
        },
        "additionalProperties": {
          "type": "object",
          "readOnly": true
        },
        "minProperties": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "maxProperties": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "definitions": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "#/definitions/AnyType"
          }
        },
        "category": {
          "type": "string",
          "readOnly": true
        },
        "categoryPriority": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "enum": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "hints": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "unsafe": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "default": {
          "type": "object",
          "readOnly": true
        },
        "oneOf": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AnyTypeObjectObject"
          }
        },
        "propertyGroups": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PropertyGroup"
          }
        }
      }
    },
    "PropertyGroup": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ObjectGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "isSystem": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "description": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServiceStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "starting",
            "ok",
            "warning",
            "error",
            "shutdown"
          ]
        },
        "node": {
          "type": "string",
          "readOnly": true
        },
        "messages": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/StatusMessage"
          }
        }
      }
    },
    "AnyType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "String",
            "Number",
            "Integer",
            "Boolean",
            "Object",
            "Array",
            "Null",
            "Ref"
          ]
        },
        "title": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        },
        "enum": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "default": {
          "type": "object",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "readOnly": true
        },
        "categoryPriority": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "hints": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "unsafe": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "oneOf": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AnyTypeObjectObject"
          }
        }
      }
    },
    "AnyTypeObjectObject": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "String",
            "Number",
            "Integer",
            "Boolean",
            "Object",
            "Array",
            "Null",
            "Ref"
          ]
        },
        "title": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        },
        "enum": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "default": {
          "type": "object",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "readOnly": true
        },
        "categoryPriority": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "hints": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "unsafe": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "oneOf": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AnyTypeObjectObject"
          }
        }
      }
    },
    "StatusMessage": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        }
      }
    }
  }
}