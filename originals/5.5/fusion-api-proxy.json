{
    "swagger": "2.0",
    "info": {
        "description": "API for the Proxy for Lucidworks Fusion",
        "version": "5.5.2",
        "title": "Fusion Proxy API",
        "termsOfService": "https://lucidworks.com/legal/developer-license-agreement/",
        "contact": {
            "name": "Lucidworks",
            "url": "www.lucidworks.com",
            "email": "support@lucidworks.com"
        },
        "license": {
            "name": "License of API",
            "url": "https://lucidworks.com/legal/developer-license-agreement/"
        }
    },
    "host": "docs5512apis.lucidworkstest.com",
    "basePath": "/",
    "tags": [{
        "name": "api-controller",
        "description": "Basic system and user status information"
    }, {
        "name": "o-auth-2-controller",
        "description": "Fusion OAuth2 endpoint"
    }, {
        "name": "realm-controller",
        "description": "Realms' management"
    }, {
        "name": "role-controller",
        "description": "Roles' management"
    }, {
        "name": "suggestion-controller",
        "description": "Suggestion endpoint"
    }, {
        "name": "user-controller",
        "description": "Fusion's Users management"
    }],
    "paths": {
        "/api": {
            "get": {
                "tags": ["api-controller"],
                "summary": "Information about the available realms and known services",
                "operationId": "getStatusUsingGET",
                "produces": ["*/*", "application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GatewayStatus"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["api-controller"],
                "summary": "Set an initial admin password",
                "operationId": "createUserUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "map",
                    "description": "map",
                    "required": false,
                    "schema": {
                        "type": "object",
                        "example": {
                            "value": "{\"password\":\"password123\"}",
                            "mediaType": {
                                "empty": true,
                                "present": false
                            }
                        },
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Initial password set"
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Password already set"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/realm-configs": {
            "get": {
                "tags": ["realm-controller"],
                "summary": "Obtain multiple realms",
                "description": "Return all realms unless name filter parameter is specified",
                "operationId": "getRealmsUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "name",
                    "in": "query",
                    "description": "Realm name to be returned",
                    "required": false,
                    "type": "string",
                    "allowEmptyValue": false
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Realm"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["realm-controller"],
                "summary": "Create Realm",
                "description": "Creates a realm based on provided configuration",
                "operationId": "createRealmUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "realm",
                    "description": "The realm",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Realm_1"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Realm"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Realm with name or id already exists"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/realm-configs/default": {
            "get": {
                "tags": ["realm-controller"],
                "summary": "Returns a potential default realms with a flag which one is currently default",
                "operationId": "getDefaultRealmListUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DefaultRealmListElement"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["realm-controller"],
                "summary": "Set Default realm",
                "operationId": "setDefaultRealmUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "realmID",
                    "description": "ID of default realm",
                    "required": false,
                    "schema": {
                        "$ref": "#/definitions/IdObject"
                    }
                }],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/realm-configs/{id}": {
            "get": {
                "tags": ["realm-controller"],
                "summary": "Get Realm",
                "description": "Obtain configuration of existing realm",
                "operationId": "getRealmUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The realm ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Realm"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Realm not found"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["realm-controller"],
                "summary": "Update an existing realm",
                "operationId": "updateRealmUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The realm ID",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "newConfiguration",
                    "description": "The realm content",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Realm_1"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Realm"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Realm not found"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["realm-controller"],
                "summary": "Delete Realm",
                "description": "Remove existing realm",
                "operationId": "deleteRealmUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The realm ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Realm not found"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/roles": {
            "get": {
                "tags": ["role-controller"],
                "summary": "Return all roles defined in the Fusion or role with a specified name",
                "operationId": "getRolesUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "name",
                    "in": "query",
                    "description": "Role name",
                    "required": false,
                    "type": "string",
                    "allowEmptyValue": false
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["role-controller"],
                "summary": "Create role",
                "description": "Create a new role in the system",
                "operationId": "createRoleUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "role",
                    "description": "Role to be created",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Role_1"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Role with a name or id already exists"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": ["role-controller"],
                "summary": "Get role",
                "description": "Obtain role with specific id",
                "operationId": "getRoleUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The role ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Role cannot be found"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["role-controller"],
                "summary": "Update existing role",
                "operationId": "updateRoleUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The role ID",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "updatedRole",
                    "description": "New role definition",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Role_1"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Role cannot be found"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["role-controller"],
                "summary": "Remove role",
                "description": "Delete a role of provided ID",
                "operationId": "deleteRoleUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The role ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Role cannot be found"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/session": {
            "get": {
                "tags": ["api-controller"],
                "summary": "Information about the current user and his roles",
                "operationId": "getSessionUsingGET",
                "produces": ["*/*", "application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["api-controller"],
                "summary": "Validate provided credentials and create Fusion JWT token",
                "description": "An operation to login a user and generate a JWT token which is returned in id cookie.",
                "operationId": "applySessionUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["api-controller"],
                "summary": "Removes id cookie from browser. Logout current user.",
                "operationId": "deleteSessionUsingDELETE",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/suggestions/collections/{collectionId}/schema/fields": {
            "get": {
                "tags": ["suggestion-controller"],
                "summary": "Match fields",
                "operationId": "matchFieldsUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "collectionId",
                    "in": "path",
                    "description": "collectionId",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "limit",
                    "required": false,
                    "type": "integer",
                    "default": 20,
                    "format": "int32"
                }, {
                    "name": "q",
                    "in": "query",
                    "description": "q",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/users": {
            "get": {
                "tags": ["user-controller"],
                "summary": "Get list of users",
                "description": "Return the users list of specific name or from specific realm",
                "operationId": "getUsersUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "realm",
                    "in": "query",
                    "description": "From which users should be returned. If not specified, then users from all realm will be returned.",
                    "required": false,
                    "type": "string",
                    "allowEmptyValue": false
                }, {
                    "name": "username",
                    "in": "query",
                    "description": "Username to filter. If not specified, then all users will returned.",
                    "required": false,
                    "type": "string",
                    "allowEmptyValue": false
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["user-controller"],
                "summary": "Create user",
                "description": "Create a new user in the system",
                "operationId": "createUserUsingPOST_1",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "newUser",
                    "description": "New user data",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateUser"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "User with a name or id already exists"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": ["user-controller"],
                "summary": "Obtain user data",
                "operationId": "getUserUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user to return",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User cannot be found"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["user-controller"],
                "summary": "Update user",
                "operationId": "updateUserUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user to update",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "updated",
                    "description": "New user definition",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/UpdateUser"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["user-controller"],
                "summary": "Remove existing user",
                "operationId": "deleteUserUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user to delete",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "User is not allowed to delete itself"
                    },
                    "404": {
                        "description": "User cannot be found"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": ["user-controller"],
                "summary": "Update user password",
                "description": "Normal users can update only theirs own password, admin users can change any user password",
                "operationId": "updatePasswordUsingPATCH",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "User ID of which password should be changed",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "updated",
                    "description": "Password update request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/UpdatePassword"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "403": {
                        "description": "User is not allowed to make a change"
                    },
                    "404": {
                        "description": "User cannot be found"
                    }
                },
                "deprecated": false
            }
        },
        "/oauth2/jwk": {
            "get": {
                "tags": ["o-auth-2-controller"],
                "summary": "Get Java Web Key",
                "description": "Returns Java Web key which can be used for Fusion token validation",
                "operationId": "getJWKUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        },
        "/oauth2/token": {
            "post": {
                "tags": ["o-auth-2-controller"],
                "summary": "Fusion token information and authentication endpoint",
                "description": "Returns an access token. Support basic authentication",
                "operationId": "getTokenUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*", "application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "400": {
                        "description": "Client error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "Bind": {
            "type": "object",
            "properties": {
                "dn": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "title": "Bind"
        },
        "Bind_1": {
            "type": "object",
            "properties": {
                "dn": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "title": "Bind_1"
        },
        "CharSequence": {
            "type": "object",
            "title": "CharSequence"
        },
        "Code": {
            "type": "object",
            "properties": {
                "authorizationUri": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "redirectUri": {
                    "type": "string"
                },
                "tokenUri": {
                    "type": "string"
                }
            },
            "title": "Code"
        },
        "Code_1": {
            "type": "object",
            "properties": {
                "clientSecret": {
                    "type": "string"
                },
                "redirectUri": {
                    "type": "string"
                },
                "authorizationUri": {
                    "type": "string"
                },
                "tokenUri": {
                    "type": "string"
                }
            },
            "title": "Code_1"
        },
        "CreateUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "realm": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                },
                "realmName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermission_1"
                    }
                }
            },
            "title": "CreateUser"
        },
        "DefaultRealmListElement": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "DefaultRealmListElement"
        },
        "ErrorInfo": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string"
                },
                "traceId": {
                    "type": "string"
                },
                "error": {
                    "type": "string",
                    "enum": ["SERVICE", "CLIENT", "CONFLICT", "NOT_FOUND", "VALIDATION", "FORBIDDEN", "REQUEST_TIMEOUT", "SERVICE_TIMEOUT", "SERVICE_UNAVAILABLE", "UNAUTHORIZED"]
                },
                "service": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "payload": {
                    "type": "object"
                },
                "trace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TraceItem"
                    }
                }
            },
            "title": "ErrorInfo"
        },
        "ErrorInfo_1": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "enum": ["SERVICE", "CLIENT", "CONFLICT", "NOT_FOUND", "VALIDATION", "FORBIDDEN", "REQUEST_TIMEOUT", "SERVICE_TIMEOUT", "SERVICE_UNAVAILABLE", "UNAUTHORIZED"]
                },
                "message": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "service": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "trace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TraceItem_1"
                    }
                },
                "traceId": {
                    "type": "string"
                }
            },
            "title": "ErrorInfo_1"
        },
        "GatewayStatus": {
            "type": "object",
            "properties": {
                "enabledRealms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Map«string,object»"
                    }
                },
                "initMeta": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "object"
                },
                "version": {
                    "type": "string"
                }
            },
            "title": "GatewayStatus"
        },
        "GlobPermission": {
            "type": "object",
            "properties": {
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["GET", "POST", "PUT", "DELETE", "HEAD", "PATCH", "OPTIONS"]
                    }
                },
                "params": {
                    "$ref": "#/definitions/PermissionParams"
                },
                "path": {
                    "type": "string"
                }
            },
            "title": "GlobPermission"
        },
        "GlobPermission_1": {
            "type": "object",
            "properties": {
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["GET", "POST", "PUT", "DELETE", "HEAD", "PATCH", "OPTIONS"]
                    }
                },
                "path": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/PermissionParams_1"
                }
            },
            "title": "GlobPermission_1"
        },
        "Groups": {
            "type": "object",
            "properties": {
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "Groups"
        },
        "IdObject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "title": "IdObject"
        },
        "JWTRealm": {
            "title": "JWTRealm",
            "allOf": [{
                "$ref": "#/definitions/Realm"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/JwtRealmConfig"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "JWTRealm"
            }]
        },
        "JWTRealm_1": {
            "title": "JWTRealm_1",
            "allOf": [{
                "$ref": "#/definitions/Realm_1"
            }, {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "config": {
                        "$ref": "#/definitions/JwtRealmConfig_1"
                    }
                },
                "title": "JWTRealm_1"
            }]
        },
        "JwtGroups": {
            "type": "object",
            "properties": {
                "groupKey": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "JwtGroups"
        },
        "JwtGroups_1": {
            "type": "object",
            "properties": {
                "groupKey": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "JwtGroups_1"
        },
        "JwtRealmConfig": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/JwtGroups"
                },
                "jwkSetUri": {
                    "type": "string"
                },
                "jwtIssuer": {
                    "type": "string"
                },
                "signingKey": {
                    "type": "string"
                },
                "userIdAttribute": {
                    "type": "string"
                }
            },
            "title": "JwtRealmConfig"
        },
        "JwtRealmConfig_1": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "jwtIssuer": {
                    "type": "string"
                },
                "signingKey": {
                    "type": "string"
                },
                "jwkSetUri": {
                    "type": "string"
                },
                "groups": {
                    "$ref": "#/definitions/JwtGroups_1"
                },
                "userIdAttribute": {
                    "type": "string"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                }
            },
            "title": "JwtRealmConfig_1"
        },
        "KerberosConfig": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "keytab": {
                    "type": "string"
                },
                "nameRules": {
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                }
            },
            "title": "KerberosConfig"
        },
        "KerberosConfig_1": {
            "type": "object",
            "properties": {
                "keytab": {
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                }
            },
            "title": "KerberosConfig_1"
        },
        "KerberosConfig_2": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "principal": {
                    "type": "string"
                },
                "keytab": {
                    "type": "string"
                },
                "nameRules": {
                    "type": "string"
                }
            },
            "title": "KerberosConfig_2"
        },
        "KerberosConfig_3": {
            "type": "object",
            "properties": {
                "principal": {
                    "type": "string"
                },
                "keytab": {
                    "type": "string"
                }
            },
            "title": "KerberosConfig_3"
        },
        "KerberosRealm": {
            "title": "KerberosRealm",
            "allOf": [{
                "$ref": "#/definitions/Realm"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/KerberosConfig"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "KerberosRealm"
            }]
        },
        "KerberosRealm_1": {
            "title": "KerberosRealm_1",
            "allOf": [{
                "$ref": "#/definitions/Realm_1"
            }, {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "config": {
                        "$ref": "#/definitions/KerberosConfig_2"
                    }
                },
                "title": "KerberosRealm_1"
            }]
        },
        "LDAPRealm": {
            "title": "LDAPRealm",
            "allOf": [{
                "$ref": "#/definitions/Realm"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/LdapRealmConfig"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "LDAPRealm"
            }]
        },
        "LDAPRealm_1": {
            "title": "LDAPRealm_1",
            "allOf": [{
                "$ref": "#/definitions/Realm_1"
            }, {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "config": {
                        "$ref": "#/definitions/LdapRealmConfig_1"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": "LDAPRealm_1"
            }]
        },
        "LdapGroups": {
            "type": "object",
            "properties": {
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "search": {
                    "$ref": "#/definitions/Search"
                }
            },
            "title": "LdapGroups"
        },
        "LdapGroups_1": {
            "type": "object",
            "properties": {
                "search": {
                    "$ref": "#/definitions/Search_1"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "LdapGroups_1"
        },
        "LdapLogin": {
            "type": "object",
            "properties": {
                "bindDnTemplate": {
                    "type": "string"
                },
                "kerberos": {
                    "$ref": "#/definitions/KerberosConfig_1"
                },
                "searchBind": {
                    "$ref": "#/definitions/SearchBind"
                }
            },
            "title": "LdapLogin"
        },
        "LdapLogin_1": {
            "type": "object",
            "properties": {
                "bindDnTemplate": {
                    "type": "string"
                },
                "kerberos": {
                    "$ref": "#/definitions/KerberosConfig_3"
                },
                "searchBind": {
                    "$ref": "#/definitions/SearchBind_1"
                }
            },
            "title": "LdapLogin_1"
        },
        "LdapRealmConfig": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "bind": {
                    "$ref": "#/definitions/Bind"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/LdapGroups"
                },
                "host": {
                    "type": "string"
                },
                "login": {
                    "$ref": "#/definitions/LdapLogin"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "ssl": {
                    "type": "boolean"
                }
            },
            "title": "LdapRealmConfig"
        },
        "LdapRealmConfig_1": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "host": {
                    "type": "string"
                },
                "ssl": {
                    "type": "boolean"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "login": {
                    "$ref": "#/definitions/LdapLogin_1"
                },
                "groups": {
                    "$ref": "#/definitions/LdapGroups_1"
                },
                "bind": {
                    "$ref": "#/definitions/Bind_1"
                }
            },
            "title": "LdapRealmConfig_1"
        },
        "Map«string,object»": {
            "type": "object",
            "title": "Map«string,object»",
            "additionalProperties": {
                "type": "object"
            }
        },
        "OidcRealm": {
            "title": "OidcRealm",
            "allOf": [{
                "$ref": "#/definitions/Realm"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/OidcRealmConfig"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "OidcRealm"
            }]
        },
        "OidcRealmConfig": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "clientId": {
                    "type": "string"
                },
                "code": {
                    "$ref": "#/definitions/Code"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/Groups"
                },
                "jwkSetUri": {
                    "type": "string"
                },
                "proxy": {
                    "$ref": "#/definitions/Proxy"
                },
                "rolesAttribute": {
                    "type": "string"
                },
                "scope": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userIdAttribute": {
                    "type": "string"
                }
            },
            "title": "OidcRealmConfig"
        },
        "OidcRealmConfig_1": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/Groups"
                },
                "code": {
                    "$ref": "#/definitions/Code_1"
                },
                "clientId": {
                    "type": "string"
                },
                "jwkSetUri": {
                    "type": "string"
                },
                "userIdAttribute": {
                    "type": "string"
                },
                "rolesAttribute": {
                    "type": "string"
                },
                "scope": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "proxy": {
                    "$ref": "#/definitions/Proxy_1"
                }
            },
            "title": "OidcRealmConfig_1"
        },
        "OidcRealm_1": {
            "title": "OidcRealm_1",
            "allOf": [{
                "$ref": "#/definitions/Realm_1"
            }, {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "config": {
                        "$ref": "#/definitions/OidcRealmConfig_1"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": "OidcRealm_1"
            }]
        },
        "PermissionParams": {
            "type": "object",
            "properties": {
                "paramNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "PermissionParams"
        },
        "PermissionParams_1": {
            "type": "object",
            "title": "PermissionParams_1"
        },
        "Proxy": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "Proxy"
        },
        "Proxy_1": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "user": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "title": "Proxy_1"
        },
        "Realm": {
            "type": "object",
            "discriminator": "realmType",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "Realm"
        },
        "Realm_1": {
            "type": "object",
            "discriminator": "realmType",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "Realm_1"
        },
        "ResponseEntity": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object"
                },
                "statusCode": {
                    "type": "string",
                    "enum": ["CONTINUE", "SWITCHING_PROTOCOLS", "PROCESSING", "CHECKPOINT", "OK", "CREATED", "ACCEPTED", "NON_AUTHORITATIVE_INFORMATION", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MULTI_STATUS", "ALREADY_REPORTED", "IM_USED", "MULTIPLE_CHOICES", "MOVED_PERMANENTLY", "FOUND", "MOVED_TEMPORARILY", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "PERMANENT_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "PAYLOAD_TOO_LARGE", "REQUEST_ENTITY_TOO_LARGE", "URI_TOO_LONG", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "I_AM_A_TEAPOT", "INSUFFICIENT_SPACE_ON_RESOURCE", "METHOD_FAILURE", "DESTINATION_LOCKED", "UNPROCESSABLE_ENTITY", "LOCKED", "FAILED_DEPENDENCY", "TOO_EARLY", "UPGRADE_REQUIRED", "PRECONDITION_REQUIRED", "TOO_MANY_REQUESTS", "REQUEST_HEADER_FIELDS_TOO_LARGE", "UNAVAILABLE_FOR_LEGAL_REASONS", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED", "VARIANT_ALSO_NEGOTIATES", "INSUFFICIENT_STORAGE", "LOOP_DETECTED", "BANDWIDTH_LIMIT_EXCEEDED", "NOT_EXTENDED", "NETWORK_AUTHENTICATION_REQUIRED"]
                },
                "statusCodeValue": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ResponseEntity"
        },
        "Role": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermission"
                    }
                },
                "uiPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "Role"
        },
        "Role_1": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "desc": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermission_1"
                    }
                },
                "uiPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "Role_1"
        },
        "SAMLRealm": {
            "title": "SAMLRealm",
            "allOf": [{
                "$ref": "#/definitions/Realm"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/SamlConfig"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "SAMLRealm"
            }]
        },
        "SAMLRealm_1": {
            "title": "SAMLRealm_1",
            "allOf": [{
                "$ref": "#/definitions/Realm_1"
            }, {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "config": {
                        "$ref": "#/definitions/SamlConfig_1"
                    }
                },
                "title": "SAMLRealm_1"
            }]
        },
        "SamlConfig": {
            "type": "object",
            "properties": {
                "appIssuer": {
                    "type": "string"
                },
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "certificateFingerprint": {
                    "type": "string"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/SamlGroups"
                },
                "idpUrl": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                },
                "userIdAttribute": {
                    "type": "string"
                }
            },
            "title": "SamlConfig"
        },
        "SamlConfig_1": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "idpUrl": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "appIssuer": {
                    "type": "string"
                },
                "certificateFingerprint": {
                    "type": "string"
                },
                "userIdAttribute": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                },
                "groups": {
                    "$ref": "#/definitions/SamlGroups_1"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                }
            },
            "title": "SamlConfig_1"
        },
        "SamlGroups": {
            "type": "object",
            "properties": {
                "groupNameAttribute": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "SamlGroups"
        },
        "SamlGroups_1": {
            "type": "object",
            "properties": {
                "groupNameAttribute": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "SamlGroups_1"
        },
        "Search": {
            "type": "object",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "filterTemplate": {
                    "type": "string"
                },
                "groupNameAttribute": {
                    "type": "string"
                },
                "subtree": {
                    "type": "boolean"
                }
            },
            "title": "Search"
        },
        "SearchBind": {
            "type": "object",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "filterTemplate": {
                    "type": "string"
                }
            },
            "title": "SearchBind"
        },
        "SearchBind_1": {
            "type": "object",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "filterTemplate": {
                    "type": "string"
                }
            },
            "title": "SearchBind_1"
        },
        "Search_1": {
            "type": "object",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "groupNameAttribute": {
                    "type": "string"
                },
                "filterTemplate": {
                    "type": "string"
                },
                "subtree": {
                    "type": "boolean"
                }
            },
            "title": "Search_1"
        },
        "Token": {
            "type": "object",
            "required": ["access_token", "expires_at", "expires_in", "issuer", "token_type"],
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInB...."
                },
                "expires_at": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1603355198
                },
                "expires_in": {
                    "type": "integer",
                    "format": "int64",
                    "example": 15000
                },
                "issuer": {
                    "type": "string",
                    "example": "http://proxy:6764/oauth2/default"
                },
                "token_type": {
                    "type": "string",
                    "example": "bearer"
                }
            },
            "title": "Token"
        },
        "TraceItem": {
            "type": "object",
            "properties": {
                "traceId": {
                    "type": "string"
                },
                "error": {
                    "type": "string",
                    "enum": ["SERVICE", "CLIENT", "CONFLICT", "NOT_FOUND", "VALIDATION", "FORBIDDEN", "REQUEST_TIMEOUT", "SERVICE_TIMEOUT", "SERVICE_UNAVAILABLE", "UNAUTHORIZED"]
                },
                "service": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "payload": {
                    "type": "object"
                }
            },
            "title": "TraceItem"
        },
        "TraceItem_1": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "enum": ["SERVICE", "CLIENT", "CONFLICT", "NOT_FOUND", "VALIDATION", "FORBIDDEN", "REQUEST_TIMEOUT", "SERVICE_TIMEOUT", "SERVICE_UNAVAILABLE", "UNAUTHORIZED"]
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "service": {
                    "type": "string"
                },
                "traceId": {
                    "type": "string"
                }
            },
            "title": "TraceItem_1"
        },
        "TrustedConfig": {
            "type": "object",
            "properties": {
                "allowedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/definitions/TrustedGroups"
                },
                "identityKey": {
                    "type": "string"
                },
                "trustedProxyHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "TrustedConfig"
        },
        "TrustedConfig_1": {
            "type": "object",
            "properties": {
                "autoCreateUsers": {
                    "type": "boolean"
                },
                "identityKey": {
                    "type": "string"
                },
                "allowedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trustedProxyHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groups": {
                    "$ref": "#/definitions/TrustedGroups_1"
                },
                "ephemeralUsers": {
                    "type": "boolean"
                }
            },
            "title": "TrustedConfig_1"
        },
        "TrustedGroups": {
            "type": "object",
            "properties": {
                "delimiter": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "TrustedGroups"
        },
        "TrustedGroups_1": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "roleMapping": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "delimiter": {
                    "type": "string"
                }
            },
            "title": "TrustedGroups_1"
        },
        "TrustedHTTPRealm": {
            "title": "TrustedHTTPRealm",
            "allOf": [{
                "$ref": "#/definitions/Realm"
            }, {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/definitions/TrustedConfig"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "TrustedHTTPRealm"
            }]
        },
        "TrustedHTTPRealm_1": {
            "title": "TrustedHTTPRealm_1",
            "allOf": [{
                "$ref": "#/definitions/Realm_1"
            }, {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "config": {
                        "$ref": "#/definitions/TrustedConfig_1"
                    }
                },
                "title": "TrustedHTTPRealm_1"
            }]
        },
        "UpdatePassword": {
            "type": "object",
            "properties": {
                "currentPassword": {
                    "$ref": "#/definitions/CharSequence"
                },
                "password": {
                    "$ref": "#/definitions/CharSequence"
                },
                "passwordConfirm": {
                    "$ref": "#/definitions/CharSequence"
                },
                "id": {
                    "type": "string"
                }
            },
            "title": "UpdatePassword"
        },
        "UpdateUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "passwordHash": {
                    "type": "string"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermission_1"
                    }
                }
            },
            "title": "UpdateUser"
        },
        "User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobPermission"
                    }
                },
                "realmName": {
                    "type": "string"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "User"
        }
    }
}