{
  "openapi": "3.0.1",
  "info": {
    "title": "job-rest-server API",
    "description": "job-rest-server enables monitoring current spark job statuses",
    "contact": {
      "name": "Lucidworks",
      "url": "www.lucidworks.com",
      "email": "support@lucidworks.com"
    },
    "license": {
      "name": "License of the API",
      "url": "https://lucidworks.com/legal/developer-license-agreement/"
    },
    "version": "5.1.0"
  },
  "externalDocs": {
    "description": "Lucidworks Documentation",
    "url": "https://doc.lucidworks.com/"
  },
  "servers": [
    {
      "url": "FUSION_HOST.com/api/job-rest-server"
    }
  ],
  "paths": {
    "/spark/configurations/{id}": {
      "get": {
        "tags": [
          "job-config-controller"
        ],
        "operationId": "getJobConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SparkJobConfig"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "job-config-controller"
        ],
        "operationId": "updateJobConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SparkJobConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SparkJobConfig"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "job-config-controller"
        ],
        "operationId": "deleteJobConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/spark/jobs/{id}": {
      "get": {
        "tags": [
          "job-controller"
        ],
        "operationId": "getJobStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SparkJobStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "job-controller"
        ],
        "operationId": "startJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SparkJobStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "job-controller"
        ],
        "operationId": "stopJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/spark/configurations": {
      "get": {
        "tags": [
          "job-config-controller"
        ],
        "operationId": "findJobConfigs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "job-config-controller"
        ],
        "operationId": "createJobConfig",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SparkJobConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SparkJobConfig"
                }
              }
            }
          }
        }
      }
    },
    "/spark/configurations/experiment": {
      "post": {
        "tags": [
          "job-config-controller"
        ],
        "operationId": "createJobConfigurationsByExperiment",
        "parameters": [
          {
            "name": "fusionResource",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Experiment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/spark/configurations/app/{appId}": {
      "post": {
        "tags": [
          "job-config-controller"
        ],
        "operationId": "createJobConfigurations",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/signals/create/{collection}": {
      "post": {
        "tags": [
          "signals-controller"
        ],
        "operationId": "createSignalsCollections",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionNames"
                }
              }
            }
          }
        }
      }
    },
    "/signals/_changed": {
      "post": {
        "tags": [
          "signals-controller"
        ],
        "operationId": "changeCallback",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Feature"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/recommend/_changed": {
      "post": {
        "tags": [
          "recommendation-controller"
        ],
        "operationId": "changeCallback_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Feature"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/spark/schema": {
      "get": {
        "tags": [
          "job-config-controller"
        ],
        "operationId": "getConfigurationTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectType"
                }
              }
            }
          }
        }
      }
    },
    "/spark/jobs": {
      "get": {
        "tags": [
          "job-controller"
        ],
        "operationId": "findJobs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SparkJobStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/spark/jobs/{id}/all": {
      "get": {
        "tags": [
          "job-controller"
        ],
        "operationId": "findJobs_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SparkJobStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/spark/driver/log/{id}": {
      "get": {
        "tags": [
          "job-config-controller"
        ],
        "operationId": "getLogsFromDefaultDriver",
        "parameters": [
          {
            "name": "rows",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/signals/{collection}/i": {
      "get": {
        "tags": [
          "signals-controller"
        ],
        "operationId": "processIncomingRequest",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "params",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MultiValueMapStringString"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    }
  },
  "components": {
    "schemas": {
      "KeyValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "SparkJobConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sparkConfig": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "type": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "SparkJobResult": {
        "type": "object",
        "properties": {
          "jobConfigId": {
            "type": "string"
          },
          "jobRunId": {
            "type": "string"
          },
          "exception": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "SparkJobStatus": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "unknown",
              "idle",
              "starting",
              "running",
              "finishing",
              "cancelling",
              "finished",
              "cancelled",
              "error",
              "skipped"
            ]
          },
          "jobId": {
            "type": "string"
          },
          "jobConfig": {
            "$ref": "#/components/schemas/SparkJobConfig"
          },
          "hostname": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/SparkJobResult"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Experiment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "uniqueIdParameter": {
            "type": "string"
          },
          "baseSignalsCollection": {
            "type": "string"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExperimentVariant"
            }
          },
          "automaticallyAdjustTraffic": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "startTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "runId": {
            "type": "string"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExperimentMetric"
            }
          }
        }
      },
      "ExperimentMetric": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "binary": {
            "type": "boolean"
          },
          "primary": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ExperimentVariant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "collection": {
            "type": "string"
          },
          "queryPipeline": {
            "type": "string"
          },
          "params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParamAndValue"
            }
          },
          "weight": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ParamAndValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "policy": {
            "type": "string",
            "enum": [
              "replace",
              "append",
              "remove",
              "default"
            ]
          }
        }
      },
      "CollectionNames": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string"
          },
          "signalsCollection": {
            "type": "string"
          },
          "signalsAggrCollection": {
            "type": "string"
          }
        }
      },
      "Feature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "collectionId": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "AnyType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "string",
              "number",
              "integer",
              "boolean",
              "object",
              "array",
              "null",
              "ref"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enum": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "default": {
            "type": "object"
          },
          "category": {
            "type": "string"
          },
          "categoryPriority": {
            "type": "integer",
            "format": "int32"
          },
          "hints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "oneOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnyTypeObjectObject"
            }
          }
        }
      },
      "AnyTypeObjectObject": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "string",
              "number",
              "integer",
              "boolean",
              "object",
              "array",
              "null",
              "ref"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enum": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "default": {
            "type": "object"
          },
          "category": {
            "type": "string"
          },
          "categoryPriority": {
            "type": "integer",
            "format": "int32"
          },
          "hints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ObjectType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "string",
              "number",
              "integer",
              "boolean",
              "object",
              "array",
              "null",
              "ref"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AnyType"
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "minProperties": {
            "type": "integer",
            "format": "int32"
          },
          "maxProperties": {
            "type": "integer",
            "format": "int32"
          },
          "definitions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AnyType"
            }
          },
          "category": {
            "type": "string"
          },
          "categoryPriority": {
            "type": "integer",
            "format": "int32"
          },
          "enum": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "hints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": {
            "type": "object"
          },
          "oneOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnyTypeObjectObject"
            }
          },
          "propertyGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyGroup"
            }
          }
        }
      },
      "PropertyGroup": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MultiValueMapStringString": {
        "type": "object",
        "properties": {
          "all": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
