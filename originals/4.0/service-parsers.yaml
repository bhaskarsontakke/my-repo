---
swagger: "2.0"
info:
  version: "4.0.2-SNAPSHOT"
  title: "Fusion Service parsers"
basePath: "/api/apollo"
tags:
- name: "parsers"
schemes:
- "http"
paths:
  /parsers:
    get:
      summary: "Get all entities"
      description: ""
      operationId: "getAllEntities"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Entity"
    post:
      summary: "Create a new entity"
      description: ""
      operationId: "createEntity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "JSON-formatted configuration values"
        required: false
        schema:
          $ref: "#/definitions/ParserConfig"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Entity"
  /parsers/_schema:
    get:
      summary: "Get JSON schema for objects managed by this API"
      description: ""
      operationId: "getEntitySchema"
      produces:
      - "application/schema+json; qs=1.0"
      - "application/json; qs=0.9"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ObjectType"
  /parsers/status:
    get:
      summary: "Get the status of the service"
      description: ""
      operationId: "getStatus"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceStatus"
  /parsers/{id}:
    get:
      summary: "Get the specified entity"
      description: ""
      operationId: "getEntity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The entity ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Entity"
    put:
      summary: "Update an entity"
      description: ""
      operationId: "updateEntity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The entity ID"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "An entity tag to match"
        required: false
        type: "string"
        default: "\"-1\""
      - in: "body"
        name: "body"
        description: "JSON-formatted configuration values"
        required: false
        schema:
          $ref: "#/definitions/ParserConfig"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Entity"
    delete:
      summary: "Delete an entity"
      description: ""
      operationId: "deleteEntity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The entity ID"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "An entity tag to match"
        required: false
        type: "string"
        default: "\"-1\""
      responses:
        default:
          description: "successful operation"
  /parsers/{id}/parse:
    post:
      summary: "Parse the supplied stream using a direct POST"
      description: "The output is one or more PipelineDocuments"
      operationId: "parseFileDirect"
      consumes:
      - "*/*"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The parser configuration ID"
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        description: "An integer value to capture the first N documents, similar to\
          \ SQL 'limit'"
        required: false
        type: "integer"
        default: 100
        format: "int32"
      - name: "offset"
        in: "query"
        description: "The offset in the complete result set where the set of returned\
          \ documents should begin, used for pagination, similar to SQL 'offset'"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        default: "application/octet-stream"
      - name: "Content-Disposition"
        in: "header"
        description: "A presentation tag for the entity body"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "The data to parse"
        required: false
        schema:
          $ref: "#/definitions/InputStream"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ParserResponse"
definitions:
  BodyPart:
    type: "object"
    properties:
      contentDisposition:
        $ref: "#/definitions/ContentDisposition"
      entity:
        type: "object"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      mediaType:
        $ref: "#/definitions/MediaType"
      messageBodyWorkers:
        $ref: "#/definitions/MessageBodyWorkers"
      parent:
        $ref: "#/definitions/MultiPart"
      providers:
        $ref: "#/definitions/Providers"
      parameterizedHeaders:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/ParameterizedHeader"
  Entity:
    type: "object"
    properties:
      id:
        type: "string"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
  ParameterizedHeader:
    type: "object"
    properties:
      value:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
  PropertyGroup:
    type: "object"
    properties:
      label:
        type: "string"
      properties:
        type: "array"
        items:
          type: "string"
  ParserErrorResponse:
    type: "object"
    properties:
      message:
        type: "string"
      context:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "object"
  Providers:
    type: "object"
  ParserStageConfig:
    type: "object"
    properties:
      id:
        type: "string"
      label:
        type: "string"
      enabled:
        type: "boolean"
        default: false
      mediaTypes:
        type: "array"
        items:
          type: "string"
      pathPatterns:
        type: "array"
        items:
          $ref: "#/definitions/SyntaxAndPattern"
      inheritMediaTypes:
        type: "boolean"
        default: false
      errorHandling:
        type: "string"
        enum:
        - "IGNORE"
        - "LOG"
        - "FAIL"
        - "MARK"
      outputFieldPrefix:
        type: "string"
      type:
        type: "string"
  ObjectType:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
      categoryPriority:
        type: "integer"
        format: "int32"
      allowedValues:
        type: "array"
        uniqueItems: true
        items:
          type: "object"
      hints:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      defaultValue:
        type: "object"
      accessibleProperty:
        $ref: "#/definitions/AccessibleProperty"
      oneOf:
        type: "array"
        items:
          $ref: "#/definitions/AnyTypeObjectObject"
      maxProperties:
        type: "integer"
        format: "int32"
      minProperties:
        type: "integer"
        format: "int32"
      required:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      properties:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/AnyType"
      propertyGroups:
        type: "array"
        items:
          $ref: "#/definitions/PropertyGroup"
      definitions:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/AnyType"
      type:
        type: "string"
        enum:
        - "String"
        - "Number"
        - "Integer"
        - "Boolean"
        - "Object"
        - "Array"
        - "Null"
        - "Ref"
      additionalProperties:
        type: "object"
  ParserDiagnostic:
    type: "object"
    properties:
      diagnosticId:
        type: "string"
      parserStageId:
        type: "string"
      parserStageType:
        type: "string"
      filter:
        type: "string"
      result:
        type: "boolean"
        default: false
      cause:
        type: "string"
      code:
        type: "integer"
        format: "int32"
  MultiPart:
    type: "object"
    properties:
      contentDisposition:
        $ref: "#/definitions/ContentDisposition"
      entity:
        type: "object"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      mediaType:
        $ref: "#/definitions/MediaType"
      messageBodyWorkers:
        $ref: "#/definitions/MessageBodyWorkers"
      parent:
        $ref: "#/definitions/MultiPart"
      providers:
        $ref: "#/definitions/Providers"
      bodyParts:
        type: "array"
        items:
          $ref: "#/definitions/BodyPart"
      parameterizedHeaders:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/ParameterizedHeader"
  ServiceStatus:
    type: "object"
    properties:
      node:
        type: "string"
      status:
        type: "string"
        enum:
        - "starting"
        - "ok"
        - "warning"
        - "error"
        - "shutdown"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      messages:
        type: "array"
        items:
          $ref: "#/definitions/StatusMessage"
  FormDataMultiPart:
    type: "object"
    properties:
      contentDisposition:
        $ref: "#/definitions/ContentDisposition"
      entity:
        type: "object"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      mediaType:
        $ref: "#/definitions/MediaType"
      messageBodyWorkers:
        $ref: "#/definitions/MessageBodyWorkers"
      parent:
        $ref: "#/definitions/MultiPart"
      providers:
        $ref: "#/definitions/Providers"
      bodyParts:
        type: "array"
        items:
          $ref: "#/definitions/BodyPart"
      fields:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/FormDataBodyPart"
      parameterizedHeaders:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/ParameterizedHeader"
  MediaType:
    type: "object"
    properties:
      type:
        type: "string"
      subtype:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
      wildcardType:
        type: "boolean"
        default: false
      wildcardSubtype:
        type: "boolean"
        default: false
  AccessibleObject:
    type: "object"
    properties:
      annotations:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      declaredAnnotations:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      accessible:
        type: "boolean"
        default: false
  AnyType:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
      categoryPriority:
        type: "integer"
        format: "int32"
      allowedValues:
        type: "array"
        uniqueItems: true
        items:
          type: "object"
      hints:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      defaultValue:
        type: "object"
      accessibleProperty:
        $ref: "#/definitions/AccessibleProperty"
      oneOf:
        type: "array"
        items:
          $ref: "#/definitions/AnyTypeObjectObject"
      type:
        type: "string"
        enum:
        - "String"
        - "Number"
        - "Integer"
        - "Boolean"
        - "Object"
        - "Array"
        - "Null"
        - "Ref"
  SyntaxAndPattern:
    type: "object"
    properties:
      syntax:
        type: "string"
        enum:
        - "GLOB"
        - "REGEX"
      pattern:
        type: "string"
  MessageBodyWorkers:
    type: "object"
  InputStream:
    type: "object"
  Annotation:
    type: "object"
  PipelineDocument:
    type: "object"
    properties:
      id:
        type: "string"
      fields:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/PipelineField"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      hints:
        type: "object"
        additionalProperties:
          type: "array"
          uniqueItems: true
          items:
            type: "string"
      commands:
        type: "array"
        items:
          $ref: "#/definitions/Command"
      content:
        type: "array"
        items:
          type: "string"
          format: "byte"
      flattenedFields:
        type: "array"
        items:
          $ref: "#/definitions/PipelineField"
      metadataNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      allFieldNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      reservedFieldNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      fieldNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
  StatusMessage:
    type: "object"
    properties:
      message:
        type: "string"
      date:
        type: "string"
        format: "date-time"
  ParserResponse:
    type: "object"
    properties:
      totalTimeMs:
        type: "integer"
        format: "int32"
      parsedStreams:
        type: "integer"
        format: "int32"
      totalDocuments:
        type: "integer"
        format: "int32"
      documents:
        type: "array"
        items:
          $ref: "#/definitions/PipelineDocument"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/ParserErrorResponse"
      diagnostics:
        type: "array"
        items:
          $ref: "#/definitions/ParserDiagnostic"
  Type:
    type: "object"
    properties:
      typeName:
        type: "string"
  ContentDisposition:
    type: "object"
    properties:
      type:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
      fileName:
        type: "string"
      creationDate:
        type: "string"
        format: "date-time"
      modificationDate:
        type: "string"
        format: "date-time"
      readDate:
        type: "string"
        format: "date-time"
      size:
        type: "integer"
        format: "int64"
  AccessibleProperty:
    type: "object"
    properties:
      name:
        type: "string"
      required:
        type: "boolean"
        default: false
      genericType:
        $ref: "#/definitions/Type"
      accessibleObject:
        $ref: "#/definitions/AccessibleObject"
  Command:
    type: "object"
    properties:
      name:
        type: "string"
      params:
        type: "object"
        additionalProperties:
          type: "string"
  FormDataBodyPart:
    type: "object"
    properties:
      contentDisposition:
        $ref: "#/definitions/ContentDisposition"
      entity:
        type: "object"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      mediaType:
        $ref: "#/definitions/MediaType"
      messageBodyWorkers:
        $ref: "#/definitions/MessageBodyWorkers"
      parent:
        $ref: "#/definitions/MultiPart"
      providers:
        $ref: "#/definitions/Providers"
      name:
        type: "string"
      value:
        type: "string"
      formDataContentDisposition:
        $ref: "#/definitions/FormDataContentDisposition"
      simple:
        type: "boolean"
        default: false
      parameterizedHeaders:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/ParameterizedHeader"
  PipelineField:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "object"
      annotations:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      annotationsSize:
        type: "integer"
        format: "int32"
      metadataNames:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
  FormDataContentDisposition:
    type: "object"
    properties:
      type:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
      fileName:
        type: "string"
      creationDate:
        type: "string"
        format: "date-time"
      modificationDate:
        type: "string"
        format: "date-time"
      readDate:
        type: "string"
        format: "date-time"
      size:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  ParserConfig:
    type: "object"
    properties:
      id:
        type: "string"
      idField:
        type: "string"
      enableMediaTypeDetection:
        type: "boolean"
        default: false
      maxParserDepth:
        type: "integer"
        format: "int32"
      parserStages:
        type: "array"
        items:
          $ref: "#/definitions/ParserStageConfig"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      hidden:
        type: "boolean"
        default: false
  AnyTypeObjectObject:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
      categoryPriority:
        type: "integer"
        format: "int32"
      allowedValues:
        type: "array"
        uniqueItems: true
        items:
          type: "object"
      hints:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      defaultValue:
        type: "object"
      accessibleProperty:
        $ref: "#/definitions/AccessibleProperty"
      oneOf:
        type: "array"
        items:
          $ref: "#/definitions/AnyTypeObjectObject"
      type:
        type: "string"
        enum:
        - "String"
        - "Number"
        - "Integer"
        - "Boolean"
        - "Object"
        - "Array"
        - "Null"
        - "Ref"
