---
swagger: "2.0"
info:
  version: "4.0.2-SNAPSHOT"
  title: "Fusion Service configurations"
basePath: "/api/apollo"
tags:
- name: "configurations"
schemes:
- "http"
paths:
  /configurations:
    get:
      summary: "List matching configuration items"
      description: ""
      operationId: "find"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pattern"
        in: "query"
        description: "Find all configuration items that contain the specified string"
        required: false
        type: "string"
      - name: "prefix"
        in: "query"
        description: "Find all configuration items that start with the specified string"
        required: false
        type: "string"
      - name: "verbose"
        in: "query"
        description: "Display the Fusion component (or the part of the serverâ€™s operating\
          \ system) that set the configuration item. Otherwise, the output includes\
          \ only the name and value of the configuration item"
        required: false
        type: "boolean"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
  /configurations/status:
    get:
      summary: "Get the status of the service"
      description: ""
      operationId: "getStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceStatus"
  /configurations/{key}:
    get:
      summary: "Display the specified configuration item"
      description: ""
      operationId: "getProperty"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "A configuration item key"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
    post:
      summary: "Create a new configuration item"
      description: ""
      operationId: "createProperty"
      consumes:
      - "application/json"
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The new configuration item key"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "The new configuration item value"
        required: false
        schema:
          type: "string"
      - name: "secret"
        in: "query"
        description: "Store this item as encrypted"
        required: false
        type: "boolean"
      responses:
        default:
          description: "successful operation"
    put:
      summary: "Update a configuration item"
      description: ""
      operationId: "setProperty"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "A configuration item key"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "The configuration item value"
        required: false
        schema:
          type: "string"
      - name: "secret"
        in: "query"
        description: "Store this item as encrypted"
        required: false
        type: "boolean"
      responses:
        default:
          description: "successful operation"
definitions:
  ServiceStatus:
    type: "object"
    properties:
      node:
        type: "string"
      status:
        type: "string"
        enum:
        - "starting"
        - "ok"
        - "warning"
        - "error"
        - "shutdown"
      additionalProperties:
        type: "object"
        additionalProperties:
          type: "object"
      messages:
        type: "array"
        items:
          $ref: "#/definitions/StatusMessage"
  StatusMessage:
    type: "object"
    properties:
      message:
        type: "string"
      date:
        type: "string"
        format: "date-time"
